{
  "contractName": "CoinFlip",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "latestNumber",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "players",
      "outputs": [
        {
          "name": "balance",
          "type": "uint256"
        },
        {
          "name": "id",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "result",
          "type": "uint256"
        }
      ],
      "name": "Result",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "description",
          "type": "string"
        }
      ],
      "name": "LogNewProvableQuery",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "randomNumber",
          "type": "uint256"
        }
      ],
      "name": "generatedRandomNumber",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "playerBet",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "random",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getContractBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "userBalance",
      "outputs": [
        {
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawPlayerBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawContractBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_queryId",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        },
        {
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "update",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"playerBet\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"},{\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"random\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"update\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"userBalance\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawContractBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawPlayerBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"latestNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"players\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"},{\"name\":\"id\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"result\",\"type\":\"uint256\"}],\"name\":\"Result\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"description\",\"type\":\"string\"}],\"name\":\"LogNewProvableQuery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"randomNumber\",\"type\":\"uint256\"}],\"name\":\"generatedRandomNumber\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"__callback(bytes32,string)\":{\"details\":\"The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/rodrigo/Documents/IvanOnTech/coin-flip-dapp/coin-flip-dapp/contracts/CoinFlip.sol\":\"CoinFlip\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/rodrigo/Documents/IvanOnTech/coin-flip-dapp/coin-flip-dapp/contracts/CoinFlip.sol\":{\"keccak256\":\"0x325c956f5e82663f17e24f11613eac796dfc8bccbfb2053e23b97e8d6493e46f\",\"urls\":[\"bzzr://5f5ecd3a282cdc73507c05bdd88b31b24811afc76a81cf0ec6401e05ace65862\"]},\"/home/rodrigo/Documents/IvanOnTech/coin-flip-dapp/coin-flip-dapp/contracts/Ownable.sol\":{\"keccak256\":\"0x5d8e032452af13f376d6af9cf754d02869118694c32594215f6226ebad0b36dd\",\"urls\":[\"bzzr://1e1ea1766795b63dd9bd6522936c61e67233f8cae94d0005dfd9a8882a96fb34\"]},\"/home/rodrigo/Documents/IvanOnTech/coin-flip-dapp/coin-flip-dapp/contracts/provableAPI_0.5.sol\":{\"keccak256\":\"0x99808903a0bacf0148e2fd064686191d1390c91ec41b5d99ef37fb09d4b7dc39\",\"urls\":[\"bzzr://c0ea7469c5950b1958aaf4ee60e0538c488743255dd6bd3091e2491c1467e82b\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200006b62000071640100000000026401000000009004565b62002332565b6000809050600062030d4090506200009b826001836200012e640100000000026401000000009004565b507fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c473896040518080602001828103825260368152602001807f50726f7661626c65207175657279207761732073656e742c207374616e64696e81526020017f6720627920666f722074686520616e737765722e2e2e0000000000000000000081525060400191505060405180910390a15050565b6000808311801562000141575060208311155b15156200014d57600080fd5b600a84029350606060016040519080825280601f01601f1916602001820160405280156200018a5781602001600182028038833980820191505090505b509050837f010000000000000000000000000000000000000000000000000000000000000002816000815181101515620001c057fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350606060206040519080825280601f01601f191660200182016040528015620002275781602001600182028038833980820191505090505b509050606060206040519080825280601f01601f191660200182016040528015620002615781602001600182028038833980820191505090505b50905060006200027f62000758640100000000026401000000009004565b905060208352424118600143034018602084015260208252806020830152606060206040519080825280601f01601f191660200182016040528015620002d45781602001600182028038833980820191505090505b509050886020820152606060086040519080825280601f01601f191660200182016040528015620003145781602001600182028038833980820191505090505b50905062000338826018600884600062000afc640100000000026401000000009004565b506200034362002240565b6080604051908101604052808781526020018881526020018681526020018481525090506000620003ba6040805190810160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c62000b60640100000000026401000000009004565b9050606060086040519080825280601f01601f191660200182016040528015620003f35781602001600182028038833980820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a0100000000000000000000000000000000000000000000000000008104602283015379010000000000000000000000000000000000000000000000000081046021830153780100000000000000000000000000000000000000000000000081046020830153506200074582828560016004811015156200053657fe5b602002015160028760006004811015156200054d57fe5b60200201516040518082805190602001908083835b60208310151562000589578051825260208201915060208101905060208303925062000562565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015620005cc573d6000803e3d6000fd5b5050506040513d6020811015620005e257600080fd5b81019080805190602001909291905050508760026004811015156200060357fe5b60200201516040516020018085805190602001908083835b6020831015156200064257805182526020820191506020810190506020830392506200061b565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b60208310151562000697578051825260208201915060208101905060208303925062000670565b6001836020036101000a03801982511681845116808217855250505050505090500183815260200182805190602001908083835b602083101515620006f25780518252602082019150602081019050602083039250620006cb565b6001836020036101000a0380198251168184511680821785525050505050509050019450505050506040516020818303038152906040528051906020012062000f67640100000000026401000000009004565b8199505050505050505050509392505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480620007f257506000620007f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662000f83640100000000026401000000009004565b145b15620008155762000813600062000f8e640100000000026401000000009004565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200089c57600080fd5b505af1158015620008b1573d6000803e3d6000fd5b505050506040513d6020811015620008c857600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151562000a3557600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620009b757600080fd5b505af1158015620009cc573d6000803e3d6000fd5b505050506040513d6020811015620009e357600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801562000aba57600080fd5b505afa15801562000acf573d6000803e3d6000fd5b505050506040513d602081101562000ae657600080fd5b8101908080519060200190929190505050905090565b6060600082850190508084511015151562000b1657600080fd5b600086602001905060008460200190505b86886020010182101562000b51578189015180828801525060208201915060208101905062000b27565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148062000bfa5750600062000bf8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662000f83640100000000026401000000009004565b145b1562000c1d5762000c1b600062000f8e640100000000026401000000009004565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562000ca457600080fd5b505af115801562000cb9573d6000803e3d6000fd5b505050506040513d602081101562000cd057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151562000e3d57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562000dbf57600080fd5b505af115801562000dd4573d6000803e3d6000fd5b505050506040513d602081101562000deb57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6060600460405190808252806020026020018201604052801562000e7657816020015b606081526020019060019003908162000e605790505b50905083600060048110151562000e8957fe5b602002015181600081518110151562000e9e57fe5b9060200190602002018190525083600160048110151562000ebb57fe5b602002015181600181518110151562000ed057fe5b9060200190602002018190525083600260048110151562000eed57fe5b602002015181600281518110151562000f0257fe5b9060200190602002018190525083600360048110151562000f1f57fe5b602002015181600381518110151562000f3457fe5b9060200190602002018190525062000f5d85828562000fb0640100000000026401000000009004565b9150509392505050565b8060046000848152602001908152602001600020819055505050565b6000813b9050919050565b600062000fa9620015d6640100000000026401000000009004565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806200104a5750600062001048600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662000f83640100000000026401000000009004565b145b156200106d576200106b600062000f8e640100000000026401000000009004565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620010f457600080fd5b505af115801562001109573d6000803e3d6000fd5b505050506040513d60208110156200112057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156200128d57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200120f57600080fd5b505af115801562001224573d6000803e3d6000fd5b505050506040513d60208110156200123b57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156200134257808201518184015260208101905062001325565b50505050905090810190601f168015620013705780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b1580156200139157600080fd5b505af1158015620013a6573d6000803e3d6000fd5b505050506040513d6020811015620013bd57600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a764000001811115620013f3576000600102915050620015cf565b60606200140f8562001c1a640100000000026401000000009004565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015620014d2578082015181840152602081019050620014b5565b50505050905090810190601f168015620015005780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b838110156200153b5780820151818401526020810190506200151e565b50505050905090810190601f168015620015695780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b1580156200158c57600080fd5b505af1158015620015a1573d6000803e3d6000fd5b50505050506040513d6020811015620015b957600080fd5b8101908080519060200190929190505050925050505b9392505050565b60008062001607731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed62000f83640100000000026401000000009004565b1115620016bc57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620016b26040805190810160405280600b81526020017f6574685f6d61696e6e657400000000000000000000000000000000000000000081525062001d06640100000000026401000000009004565b6001905062001c17565b6000620016ec73c03a2615d5efaf5f49f60b7bb6583eaec212fdf162000f83640100000000026401000000009004565b1115620017a15773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620017976040805190810160405280600c81526020017f6574685f726f707374656e33000000000000000000000000000000000000000081525062001d06640100000000026401000000009004565b6001905062001c17565b6000620017d173b7a07bcf2ba2f2703b24c0691b5278999c59ac7e62000f83640100000000026401000000009004565b1115620018865773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200187c6040805190810160405280600981526020017f6574685f6b6f76616e000000000000000000000000000000000000000000000081525062001d06640100000000026401000000009004565b6001905062001c17565b6000620018b673146500cfd35b22e4a392fe0adc06de1a1368ed4862000f83640100000000026401000000009004565b11156200196b5773146500cfd35b22e4a392fe0adc06de1a1368ed48600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620019616040805190810160405280600b81526020017f6574685f72696e6b65627900000000000000000000000000000000000000000081525062001d06640100000000026401000000009004565b6001905062001c17565b60006200199b73a2998efd205fb9d4b4963afb70778d6354ad3a4162000f83640100000000026401000000009004565b111562001a505773a2998efd205fb9d4b4963afb70778d6354ad3a41600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062001a466040805190810160405280600a81526020017f6574685f676f65726c690000000000000000000000000000000000000000000081525062001d06640100000000026401000000009004565b6001905062001c17565b600062001a80736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47562000f83640100000000026401000000009004565b111562001ae657736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905062001c17565b600062001b167320e12a1f859b3feae5fb2a0a32c18f5a65555bbf62000f83640100000000026401000000009004565b111562001b7c577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905062001c17565b600062001bac7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa62000f83640100000000026401000000009004565b111562001c12577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905062001c17565b600090505b90565b606062001c3562001d22640100000000026401000000009004565b62001c3f62002269565b62001c618161040062001d2e64010000000002620027f0176401000000009004565b62001c808162001d816401000000000262002840176401000000009004565b60008090505b835181101562001cd95762001ccb848281518110151562001ca357fe5b906020019060200201518362001da0640100000000026200284e179091906401000000009004565b808060010191505062001c86565b5062001cf98162001de66401000000000262002873176401000000009004565b8060000151915050919050565b806003908051906020019062001d1e92919062002283565b5050565b60405180590338823950565b6000819050600060208281151562001d4257fe5b0614151562001d615760208181151562001d5857fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b62001d9d81600462001e05640100000000026401000000009004565b50565b62001dbe826002835162001e39640100000000026401000000009004565b62001de181836200202b64010000000002620029fe179091906401000000009004565b505050565b62001e0281600762001e05640100000000026401000000009004565b50565b62001e35601f60058360ff169060020a021783620020ff6401000000000262002aab179091906401000000009004565b5050565b60178111151562001e7c5762001e768160058460ff169060020a0260ff161784620020ff6401000000000262002aab179091906401000000009004565b62002026565b60ff8111151562001ee45762001eb7601860058460ff169060020a021784620020ff6401000000000262002aab179091906401000000009004565b62001edd81600185620021516401000000000262002aeb17909291906401000000009004565b5062002025565b61ffff8111151562001f4d5762001f20601960058460ff169060020a021784620020ff6401000000000262002aab179091906401000000009004565b62001f4681600285620021516401000000000262002aeb17909291906401000000009004565b5062002024565b63ffffffff8111151562001fb85762001f8b601a60058460ff169060020a021784620020ff6401000000000262002aab179091906401000000009004565b62001fb181600485620021516401000000000262002aeb17909291906401000000009004565b5062002023565b67ffffffffffffffff81111515620020225762001ffa601b60058460ff169060020a021784620020ff6401000000000262002aab179091906401000000009004565b6200202081600885620021516401000000000262002aeb17909291906401000000009004565b505b5b5b5b5b505050565b6200203562002269565b826020015183600001515183510111156200208857620020878360026200207186602001518651620021dd640100000000026401000000009004565b02620021fb640100000000026401000000009004565b5b60008060008451905085518051602081830101945086518101825260208701935050505b602081101515620020d35781518352602083019250602082019150602081039050620020ac565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b81602001516001836000015151011115620021375762002136826002846020015102620021fb640100000000026401000000009004565b5b815180516020818301018381536001820183525050505050565b6200215b62002269565b836020015184600001515183011115620021ac57620021ab84600262002195876020015186620021dd640100000000026401000000009004565b02620021fb640100000000026401000000009004565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b600081831115620021f157829050620021f5565b8190505b92915050565b6060826000015190506200221f838362001d2e640100000000026401000000009004565b6200223a83826200202b640100000000026401000000009004565b50505050565b6080604051908101604052806004905b6060815260200190600190039081620022505790505090565b604080519081016040528060608152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620022c657805160ff1916838001178555620022f7565b82800160010185558215620022f7579182015b82811115620022f6578251825591602001919060010190620022d9565b5b5090506200230691906200230a565b5090565b6200232f91905b808211156200232b57600081600090555060010162002311565b5090565b90565b612ca480620023426000396000f3fe6080604052600436106100ba576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630dea35bf146100bf57806327dc297e146100ed57806338bbfa50146101bf5780635ec01e4d146103285780636f9fb98a146103535780638da5cb5b1461037e578063a2e62045146103d5578063bf152765146103df578063bfab3db91461040a578063d325101a14610421578063dc34b0aa14610438578063e2eb41ff14610463575b600080fd5b6100eb600480360360208110156100d557600080fd5b81019080803590602001909291905050506104fb565b005b3480156100f957600080fd5b506101bd6004803603604081101561011057600080fd5b81019080803590602001909291908035906020019064010000000081111561013757600080fd5b82018360208201111561014957600080fd5b8035906020019184600183028401116401000000008311171561016b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506105fb565b005b3480156101cb57600080fd5b50610326600480360360608110156101e257600080fd5b81019080803590602001909291908035906020019064010000000081111561020957600080fd5b82018360208201111561021b57600080fd5b8035906020019184600183028401116401000000008311171561023d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156102a057600080fd5b8201836020820111156102b257600080fd5b803590602001918460018302840111640100000000831117156102d457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061063e565b005b34801561033457600080fd5b5061033d61074b565b6040518082815260200191505060405180910390f35b34801561035f57600080fd5b5061036861075f565b6040518082815260200191505060405180910390f35b34801561038a57600080fd5b5061039361077e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103dd6107a3565b005b3480156103eb57600080fd5b506103f461084f565b6040518082815260200191505060405180910390f35b34801561041657600080fd5b5061041f610899565b005b34801561042d57600080fd5b50610436610980565b005b34801561044457600080fd5b5061044d610ab8565b6040518082815260200191505060405180910390f35b34801561046f57600080fd5b506104b26004803603602081101561048657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610abe565b604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b803414151561050957600080fd5b6105116107a3565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050338160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006105a161074b565b905060018114156105bf578282600001600082825401925050819055505b7fa9bb0fa194e939eadb11be8d62dd4a16e0f5e89f37fb73fa7f0f8446f1abba61816040518082815260200191505060405180910390a1505050565b61063a828260006040519080825280601f01601f1916602001820160405280156106345781602001600182028038833980820191505090505b5061063e565b5050565b610646610b02565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561067f57600080fd5b60006064836040516020018082805190602001908083835b6020831015156106bc5780518252602082019150602081019050602083039250610697565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001206001900481151561070457fe5b069050806006819055507fc13d60fe9dffdb6908d2d446cd18134373a51db0738ee04f296eeb9128121cbc816040518082815260200191505060405180910390a150505050565b600060024281151561075957fe5b06905090565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809050600062030d4090506107bc82600183610e78565b507fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c473896040518080602001828103825260368152602001807f50726f7661626c65207175657279207761732073656e742c207374616e64696e81526020017f6720627920666f722074686520616e737765722e2e2e0000000000000000000081525060400191505060405180910390a15050565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156108f457600080fd5b60003073ffffffffffffffffffffffffffffffffffffffff163111151561091a57600080fd5b60003073ffffffffffffffffffffffffffffffffffffffff163190503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561097c573d6000803e3d6000fd5b5050565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541115156109d157600080fd5b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610a5e573d6000803e3d6000fd5b506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508181600001600082825403925050819055505050565b60065481565b60076020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610b8a57506000610b88600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611446565b145b15610b9b57610b996000611451565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610c2157600080fd5b505af1158015610c35573d6000803e3d6000fd5b505050506040513d6020811015610c4b57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610db457600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610d3857600080fd5b505af1158015610d4c573d6000803e3d6000fd5b505050506040513d6020811015610d6257600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015610e3857600080fd5b505afa158015610e4c573d6000803e3d6000fd5b505050506040513d6020811015610e6257600080fd5b8101908080519060200190929190505050905090565b60008083118015610e8a575060208311155b1515610e9557600080fd5b600a84029350606060016040519080825280601f01601f191660200182016040528015610ed15781602001600182028038833980820191505090505b509050837f010000000000000000000000000000000000000000000000000000000000000002816000815181101515610f0657fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350606060206040519080825280601f01601f191660200182016040528015610f6c5781602001600182028038833980820191505090505b509050606060206040519080825280601f01601f191660200182016040528015610fa55781602001600182028038833980820191505090505b5090506000610fb2611462565b905060208352424118600143034018602084015260208252806020830152606060206040519080825280601f01601f1916602001820160405280156110065781602001600182028038833980820191505090505b509050886020820152606060086040519080825280601f01601f1916602001820160405280156110455781602001600182028038833980820191505090505b50905061105882601860088460006117d8565b50611061612b91565b60806040519081016040528087815260200188815260200186815260200184815250905060006110c76040805190810160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c611839565b9050606060086040519080825280601f01601f1916602001820160405280156110ff5781602001600182028038833980820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a010000000000000000000000000000000000000000000000000000810460228301537901000000000000000000000000000000000000000000000000008104602183015378010000000000000000000000000000000000000000000000008104602083015350611433828285600160048110151561124057fe5b6020020151600287600060048110151561125657fe5b60200201516040518082805190602001908083835b602083101515611290578051825260208201915060208101905060208303925061126b565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa1580156112d2573d6000803e3d6000fd5b5050506040513d60208110156112e757600080fd5b810190808051906020019092919050505087600260048110151561130757fe5b60200201516040516020018085805190602001908083835b602083101515611344578051825260208201915060208101905060208303925061131f565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b6020831015156113975780518252602082019150602081019050602083039250611372565b6001836020036101000a03801982511681845116808217855250505050505090500183815260200182805190602001908083835b6020831015156113f057805182526020820191506020810190506020830392506113cb565b6001836020036101000a03801982511681845116808217855250505050505090500194505050505060405160208183030381529060405280519060200120611bfa565b8199505050505050505050509392505050565b6000813b9050919050565b600061145b611c16565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806114ea575060006114e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611446565b145b156114fb576114f96000611451565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561158157600080fd5b505af1158015611595573d6000803e3d6000fd5b505050506040513d60208110156115ab57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561171457600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561169857600080fd5b505af11580156116ac573d6000803e3d6000fd5b505050506040513d60208110156116c257600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801561179857600080fd5b505afa1580156117ac573d6000803e3d6000fd5b505050506040513d60208110156117c257600080fd5b8101908080519060200190929190505050905090565b606060008285019050808451101515156117f157600080fd5b600086602001905060008460200190505b86886020010182101561182a5781890151808288015250602082019150602081019050611802565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806118c1575060006118bf600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611446565b145b156118d2576118d06000611451565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561195857600080fd5b505af115801561196c573d6000803e3d6000fd5b505050506040513d602081101561198257600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611aeb57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611a6f57600080fd5b505af1158015611a83573d6000803e3d6000fd5b505050506040513d6020811015611a9957600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60606004604051908082528060200260200182016040528015611b2257816020015b6060815260200190600190039081611b0d5790505b509050836000600481101515611b3457fe5b6020020151816000815181101515611b4857fe5b90602001906020020181905250836001600481101515611b6457fe5b6020020151816001815181101515611b7857fe5b90602001906020020181905250836002600481101515611b9457fe5b6020020151816002815181101515611ba857fe5b90602001906020020181905250836003600481101515611bc457fe5b6020020151816003815181101515611bd857fe5b90602001906020020181905250611bf085828561216d565b9150509392505050565b8060046000848152602001908152602001600020819055505050565b600080611c36731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed611446565b1115611cd857731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611ccf6040805190810160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250612746565b6001905061216a565b6000611cf773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1611446565b1115611d995773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611d906040805190810160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250612746565b6001905061216a565b6000611db873b7a07bcf2ba2f2703b24c0691b5278999c59ac7e611446565b1115611e5a5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611e516040805190810160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250612746565b6001905061216a565b6000611e7973146500cfd35b22e4a392fe0adc06de1a1368ed48611446565b1115611f1b5773146500cfd35b22e4a392fe0adc06de1a1368ed48600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611f126040805190810160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250612746565b6001905061216a565b6000611f3a73a2998efd205fb9d4b4963afb70778d6354ad3a41611446565b1115611fdc5773a2998efd205fb9d4b4963afb70778d6354ad3a41600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611fd36040805190810160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250612746565b6001905061216a565b6000611ffb736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475611446565b111561205f57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061216a565b600061207e7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf611446565b11156120e2577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061216a565b60006121017351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa611446565b1115612165577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061216a565b600090505b90565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806121f5575060006121f3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611446565b145b15612206576122046000611451565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561228c57600080fd5b505af11580156122a0573d6000803e3d6000fd5b505050506040513d60208110156122b657600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561241f57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156123a357600080fd5b505af11580156123b7573d6000803e3d6000fd5b505050506040513d60208110156123cd57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156124d25780820151818401526020810190506124b7565b50505050905090810190601f1680156124ff5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801561251f57600080fd5b505af1158015612533573d6000803e3d6000fd5b505050506040513d602081101561254957600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a76400000181111561257d57600060010291505061273f565b606061258885612760565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b8381101561264957808201518184015260208101905061262e565b50505050905090810190601f1680156126765780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b838110156126af578082015181840152602081019050612694565b50505050905090810190601f1680156126dc5780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b1580156126fe57600080fd5b505af1158015612712573d6000803e3d6000fd5b50505050506040513d602081101561272957600080fd5b8101908080519060200190929190505050925050505b9392505050565b806003908051906020019061275c929190612bb9565b5050565b606061276a6127e4565b612772612c39565b61277e816104006127f0565b61278781612840565b60008090505b83518110156127cd576127c084828151811015156127a757fe5b906020019060200201518361284e90919063ffffffff16565b808060010191505061278d565b506127d781612873565b8060000151915050919050565b60405180590338823950565b6000819050600060208281151561280357fe5b061415156128205760208181151561281757fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b61284b816004612881565b50565b61285b82600283516128a5565b61286e81836129fe90919063ffffffff16565b505050565b61287e816007612881565b50565b6128a1601f60058360ff169060020a021783612aab90919063ffffffff16565b5050565b6017811115156128d6576128d18160058460ff169060020a0260ff161784612aab90919063ffffffff16565b6129f9565b60ff8111151561291c57612900601860058460ff169060020a021784612aab90919063ffffffff16565b61291681600185612aeb9092919063ffffffff16565b506129f8565b61ffff8111151561296357612947601960058460ff169060020a021784612aab90919063ffffffff16565b61295d81600285612aeb9092919063ffffffff16565b506129f7565b63ffffffff811115156129ac57612990601a60058460ff169060020a021784612aab90919063ffffffff16565b6129a681600485612aeb9092919063ffffffff16565b506129f6565b67ffffffffffffffff811115156129f5576129dd601b60058460ff169060020a021784612aab90919063ffffffff16565b6129f381600885612aeb9092919063ffffffff16565b505b5b5b5b5b505050565b612a06612c39565b82602001518360000151518351011115612a3657612a35836002612a2f86602001518651612b52565b02612b6e565b5b60008060008451905085518051602081830101945086518101825260208701935050505b602081101515612a7f5781518352602083019250602082019150602081039050612a5a565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b81602001516001836000015151011115612ad157612ad0826002846020015102612b6e565b5b815180516020818301018381536001820183525050505050565b612af3612c39565b836020015184600001515183011115612b2157612b20846002612b1a876020015186612b52565b02612b6e565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b600081831115612b6457829050612b68565b8190505b92915050565b606082600001519050612b8183836127f0565b612b8b83826129fe565b50505050565b6080604051908101604052806004905b6060815260200190600190039081612ba15790505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612bfa57805160ff1916838001178555612c28565b82800160010185558215612c28579182015b82811115612c27578251825591602001919060010190612c0c565b5b509050612c359190612c53565b5090565b604080519081016040528060608152602001600081525090565b612c7591905b80821115612c71576000816000905550600101612c59565b5090565b9056fea165627a7a7230582092d1031df51e635d332dbda7dc940fad93ca4ed0bc2f099db77e9419b60896c50029",
  "deployedBytecode": "0x6080604052600436106100ba576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630dea35bf146100bf57806327dc297e146100ed57806338bbfa50146101bf5780635ec01e4d146103285780636f9fb98a146103535780638da5cb5b1461037e578063a2e62045146103d5578063bf152765146103df578063bfab3db91461040a578063d325101a14610421578063dc34b0aa14610438578063e2eb41ff14610463575b600080fd5b6100eb600480360360208110156100d557600080fd5b81019080803590602001909291905050506104fb565b005b3480156100f957600080fd5b506101bd6004803603604081101561011057600080fd5b81019080803590602001909291908035906020019064010000000081111561013757600080fd5b82018360208201111561014957600080fd5b8035906020019184600183028401116401000000008311171561016b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506105fb565b005b3480156101cb57600080fd5b50610326600480360360608110156101e257600080fd5b81019080803590602001909291908035906020019064010000000081111561020957600080fd5b82018360208201111561021b57600080fd5b8035906020019184600183028401116401000000008311171561023d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156102a057600080fd5b8201836020820111156102b257600080fd5b803590602001918460018302840111640100000000831117156102d457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061063e565b005b34801561033457600080fd5b5061033d61074b565b6040518082815260200191505060405180910390f35b34801561035f57600080fd5b5061036861075f565b6040518082815260200191505060405180910390f35b34801561038a57600080fd5b5061039361077e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103dd6107a3565b005b3480156103eb57600080fd5b506103f461084f565b6040518082815260200191505060405180910390f35b34801561041657600080fd5b5061041f610899565b005b34801561042d57600080fd5b50610436610980565b005b34801561044457600080fd5b5061044d610ab8565b6040518082815260200191505060405180910390f35b34801561046f57600080fd5b506104b26004803603602081101561048657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610abe565b604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b803414151561050957600080fd5b6105116107a3565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050338160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006105a161074b565b905060018114156105bf578282600001600082825401925050819055505b7fa9bb0fa194e939eadb11be8d62dd4a16e0f5e89f37fb73fa7f0f8446f1abba61816040518082815260200191505060405180910390a1505050565b61063a828260006040519080825280601f01601f1916602001820160405280156106345781602001600182028038833980820191505090505b5061063e565b5050565b610646610b02565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561067f57600080fd5b60006064836040516020018082805190602001908083835b6020831015156106bc5780518252602082019150602081019050602083039250610697565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001206001900481151561070457fe5b069050806006819055507fc13d60fe9dffdb6908d2d446cd18134373a51db0738ee04f296eeb9128121cbc816040518082815260200191505060405180910390a150505050565b600060024281151561075957fe5b06905090565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809050600062030d4090506107bc82600183610e78565b507fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c473896040518080602001828103825260368152602001807f50726f7661626c65207175657279207761732073656e742c207374616e64696e81526020017f6720627920666f722074686520616e737765722e2e2e0000000000000000000081525060400191505060405180910390a15050565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156108f457600080fd5b60003073ffffffffffffffffffffffffffffffffffffffff163111151561091a57600080fd5b60003073ffffffffffffffffffffffffffffffffffffffff163190503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561097c573d6000803e3d6000fd5b5050565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541115156109d157600080fd5b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610a5e573d6000803e3d6000fd5b506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508181600001600082825403925050819055505050565b60065481565b60076020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610b8a57506000610b88600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611446565b145b15610b9b57610b996000611451565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610c2157600080fd5b505af1158015610c35573d6000803e3d6000fd5b505050506040513d6020811015610c4b57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610db457600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610d3857600080fd5b505af1158015610d4c573d6000803e3d6000fd5b505050506040513d6020811015610d6257600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015610e3857600080fd5b505afa158015610e4c573d6000803e3d6000fd5b505050506040513d6020811015610e6257600080fd5b8101908080519060200190929190505050905090565b60008083118015610e8a575060208311155b1515610e9557600080fd5b600a84029350606060016040519080825280601f01601f191660200182016040528015610ed15781602001600182028038833980820191505090505b509050837f010000000000000000000000000000000000000000000000000000000000000002816000815181101515610f0657fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350606060206040519080825280601f01601f191660200182016040528015610f6c5781602001600182028038833980820191505090505b509050606060206040519080825280601f01601f191660200182016040528015610fa55781602001600182028038833980820191505090505b5090506000610fb2611462565b905060208352424118600143034018602084015260208252806020830152606060206040519080825280601f01601f1916602001820160405280156110065781602001600182028038833980820191505090505b509050886020820152606060086040519080825280601f01601f1916602001820160405280156110455781602001600182028038833980820191505090505b50905061105882601860088460006117d8565b50611061612b91565b60806040519081016040528087815260200188815260200186815260200184815250905060006110c76040805190810160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c611839565b9050606060086040519080825280601f01601f1916602001820160405280156110ff5781602001600182028038833980820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a010000000000000000000000000000000000000000000000000000810460228301537901000000000000000000000000000000000000000000000000008104602183015378010000000000000000000000000000000000000000000000008104602083015350611433828285600160048110151561124057fe5b6020020151600287600060048110151561125657fe5b60200201516040518082805190602001908083835b602083101515611290578051825260208201915060208101905060208303925061126b565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa1580156112d2573d6000803e3d6000fd5b5050506040513d60208110156112e757600080fd5b810190808051906020019092919050505087600260048110151561130757fe5b60200201516040516020018085805190602001908083835b602083101515611344578051825260208201915060208101905060208303925061131f565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b6020831015156113975780518252602082019150602081019050602083039250611372565b6001836020036101000a03801982511681845116808217855250505050505090500183815260200182805190602001908083835b6020831015156113f057805182526020820191506020810190506020830392506113cb565b6001836020036101000a03801982511681845116808217855250505050505090500194505050505060405160208183030381529060405280519060200120611bfa565b8199505050505050505050509392505050565b6000813b9050919050565b600061145b611c16565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806114ea575060006114e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611446565b145b156114fb576114f96000611451565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561158157600080fd5b505af1158015611595573d6000803e3d6000fd5b505050506040513d60208110156115ab57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561171457600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561169857600080fd5b505af11580156116ac573d6000803e3d6000fd5b505050506040513d60208110156116c257600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801561179857600080fd5b505afa1580156117ac573d6000803e3d6000fd5b505050506040513d60208110156117c257600080fd5b8101908080519060200190929190505050905090565b606060008285019050808451101515156117f157600080fd5b600086602001905060008460200190505b86886020010182101561182a5781890151808288015250602082019150602081019050611802565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806118c1575060006118bf600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611446565b145b156118d2576118d06000611451565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561195857600080fd5b505af115801561196c573d6000803e3d6000fd5b505050506040513d602081101561198257600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611aeb57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611a6f57600080fd5b505af1158015611a83573d6000803e3d6000fd5b505050506040513d6020811015611a9957600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60606004604051908082528060200260200182016040528015611b2257816020015b6060815260200190600190039081611b0d5790505b509050836000600481101515611b3457fe5b6020020151816000815181101515611b4857fe5b90602001906020020181905250836001600481101515611b6457fe5b6020020151816001815181101515611b7857fe5b90602001906020020181905250836002600481101515611b9457fe5b6020020151816002815181101515611ba857fe5b90602001906020020181905250836003600481101515611bc457fe5b6020020151816003815181101515611bd857fe5b90602001906020020181905250611bf085828561216d565b9150509392505050565b8060046000848152602001908152602001600020819055505050565b600080611c36731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed611446565b1115611cd857731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611ccf6040805190810160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250612746565b6001905061216a565b6000611cf773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1611446565b1115611d995773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611d906040805190810160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250612746565b6001905061216a565b6000611db873b7a07bcf2ba2f2703b24c0691b5278999c59ac7e611446565b1115611e5a5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611e516040805190810160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250612746565b6001905061216a565b6000611e7973146500cfd35b22e4a392fe0adc06de1a1368ed48611446565b1115611f1b5773146500cfd35b22e4a392fe0adc06de1a1368ed48600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611f126040805190810160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250612746565b6001905061216a565b6000611f3a73a2998efd205fb9d4b4963afb70778d6354ad3a41611446565b1115611fdc5773a2998efd205fb9d4b4963afb70778d6354ad3a41600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611fd36040805190810160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250612746565b6001905061216a565b6000611ffb736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475611446565b111561205f57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061216a565b600061207e7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf611446565b11156120e2577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061216a565b60006121017351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa611446565b1115612165577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061216a565b600090505b90565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806121f5575060006121f3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611446565b145b15612206576122046000611451565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561228c57600080fd5b505af11580156122a0573d6000803e3d6000fd5b505050506040513d60208110156122b657600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561241f57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156123a357600080fd5b505af11580156123b7573d6000803e3d6000fd5b505050506040513d60208110156123cd57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156124d25780820151818401526020810190506124b7565b50505050905090810190601f1680156124ff5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801561251f57600080fd5b505af1158015612533573d6000803e3d6000fd5b505050506040513d602081101561254957600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a76400000181111561257d57600060010291505061273f565b606061258885612760565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b8381101561264957808201518184015260208101905061262e565b50505050905090810190601f1680156126765780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b838110156126af578082015181840152602081019050612694565b50505050905090810190601f1680156126dc5780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b1580156126fe57600080fd5b505af1158015612712573d6000803e3d6000fd5b50505050506040513d602081101561272957600080fd5b8101908080519060200190929190505050925050505b9392505050565b806003908051906020019061275c929190612bb9565b5050565b606061276a6127e4565b612772612c39565b61277e816104006127f0565b61278781612840565b60008090505b83518110156127cd576127c084828151811015156127a757fe5b906020019060200201518361284e90919063ffffffff16565b808060010191505061278d565b506127d781612873565b8060000151915050919050565b60405180590338823950565b6000819050600060208281151561280357fe5b061415156128205760208181151561281757fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b61284b816004612881565b50565b61285b82600283516128a5565b61286e81836129fe90919063ffffffff16565b505050565b61287e816007612881565b50565b6128a1601f60058360ff169060020a021783612aab90919063ffffffff16565b5050565b6017811115156128d6576128d18160058460ff169060020a0260ff161784612aab90919063ffffffff16565b6129f9565b60ff8111151561291c57612900601860058460ff169060020a021784612aab90919063ffffffff16565b61291681600185612aeb9092919063ffffffff16565b506129f8565b61ffff8111151561296357612947601960058460ff169060020a021784612aab90919063ffffffff16565b61295d81600285612aeb9092919063ffffffff16565b506129f7565b63ffffffff811115156129ac57612990601a60058460ff169060020a021784612aab90919063ffffffff16565b6129a681600485612aeb9092919063ffffffff16565b506129f6565b67ffffffffffffffff811115156129f5576129dd601b60058460ff169060020a021784612aab90919063ffffffff16565b6129f381600885612aeb9092919063ffffffff16565b505b5b5b5b5b505050565b612a06612c39565b82602001518360000151518351011115612a3657612a35836002612a2f86602001518651612b52565b02612b6e565b5b60008060008451905085518051602081830101945086518101825260208701935050505b602081101515612a7f5781518352602083019250602082019150602081039050612a5a565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b81602001516001836000015151011115612ad157612ad0826002846020015102612b6e565b5b815180516020818301018381536001820183525050505050565b612af3612c39565b836020015184600001515183011115612b2157612b20846002612b1a876020015186612b52565b02612b6e565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b600081831115612b6457829050612b68565b8190505b92915050565b606082600001519050612b8183836127f0565b612b8b83826129fe565b50505050565b6080604051908101604052806004905b6060815260200190600190039081612ba15790505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612bfa57805160ff1916838001178555612c28565b82800160010185558215612c28579182015b82811115612c27578251825591602001919060010190612c0c565b5b509050612c359190612c53565b5090565b604080519081016040528060608152602001600081525090565b612c7591905b80821115612c71576000816000905550600101612c59565b5090565b9056fea165627a7a7230582092d1031df51e635d332dbda7dc940fad93ca4ed0bc2f099db77e9419b60896c50029",
  "sourceMap": "123:2559:0:-;;;529:58;8:9:-1;5:2;;;30:1;27;20:12;5:2;529:58:0;214:10:2;206:5;;:18;;;;;;;;;;;;;;;;;;572:8:0;:6;;;:8;;;:::i;:::-;123:2559;;2228:451;2291:29;2323:1;2291:33;;2397:24;2424:6;2397:33;;2440:140;2479:21;359:1;2554:16;2440:25;;;:140;;;:::i;:::-;;2595:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2228:451;;:::o;45041:2642:3:-;45143:16;45190:1;45180:7;:11;45179:32;;;;;45208:2;45197:7;:13;;45179:32;45171:41;;;;;;;;45232:2;45222:12;;;;45290:19;45322:1;45312:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;45312:12:3;;;;45290:34;;45357:7;45346:20;;45334:6;45341:1;45334:9;;;;;;;;;;;;;;:32;;;;;;;;;;;45376:19;45408:2;45398:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;45398:13:3;;;;45376:35;;45421:27;45461:2;45451:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;45451:13:3;;;;45421:43;;45474:30;45507:40;:38;;;:40;;;:::i;:::-;45474:73;;45595:4;45587:6;45580:20;45942:9;45932:8;45928:24;45923:1;45915:6;45911:14;45901:25;45897:56;45890:4;45882:6;45878:17;45871:83;45990:4;45974:14;45967:28;46042:22;46035:4;46019:14;46015:25;46008:57;46084:18;46115:2;46105:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46105:13:3;;;;46084:34;;46176:6;46169:4;46162:5;46158:16;46151:32;46202:25;46240:1;46230:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46230:12:3;;;;46202:40;;46252;46262:5;46269:2;46273:1;46276:12;46290:1;46252:9;;;:40;;;:::i;:::-;;46302:20;;:::i;:::-;:62;;;;;;;;;46326:6;46302:62;;;;46334:6;46302:62;;;;46342:14;46302:62;;;;46358:5;46302:62;;;;;46374:15;46392:47;;;;;;;;;;;;;;;;;;;46417:4;46423:15;46392:14;;;:47;;;:::i;:::-;46374:65;;46449:30;46492:1;46482:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46482:12:3;;;;46449:45;;46560:4;46546:12;46542:23;46536:30;46624:65;46621:1;46617:73;46610:4;46591:17;46587:28;46579:112;46749:63;46746:1;46742:71;46735:4;46716:17;46712:28;46704:110;46872:61;46869:1;46865:69;46858:4;46839:17;46835:28;46827:108;46993:59;46990:1;46986:67;46979:4;46960:17;46956:28;46948:106;47112:57;47109:1;47105:65;47098:4;47079:17;47075:28;47067:104;47229:55;47226:1;47222:63;47215:4;47196:17;47192:28;47184:102;47344:53;47341:1;47337:61;47330:4;47311:17;47307:28;47299:100;47457:51;47454:1;47450:59;47443:4;47424:17;47420:28;47412:98;46513:1007;47529:123;47561:7;47597:17;47616:4;47621:1;47616:7;;;;;;;;;;;;;47625:15;47632:4;47637:1;47632:7;;;;;;;;;;;;;47625:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47625:15:3;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;47625:15:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;47625:15:3;;;;;;;;;;;;;;;;47642:4;47647:1;47642:7;;;;;;;;;;;;;47580:70;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47580:70:3;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47580:70:3;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47580:70:3;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;47580:70:3;;;47570:81;;;;;;47529:31;;;:123;;;:::i;:::-;47669:7;47662:14;;;;;;;;;;;45041:2642;;;;;:::o;37631:169::-;37711:23;11886:1;11862:26;;11870:3;;;;;;;;;;;11862:26;;;11861:64;;;;11923:1;11894:25;11914:3;;;;;;;;;;;11894:11;;;:25;;;:::i;:::-;:30;11861:64;11857:130;;;11941:35;11518:1;11941:19;;;:35;;;:::i;:::-;;11857:130;12021:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12021:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12021:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12021:16:3;;;;;;;;;;;;;;;;12000:37;;12008:8;;;;;;;;;;;12000:37;;;;11996:106;;;12074:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12074:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12074:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12074:16:3;;;;;;;;;;;;;;;;12053:8;;:38;;;;;;;;;;;;;;;;;;11996:106;37753:8;;;;;;;;;;;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37753:40:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;37753:40:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;37753:40:3;;;;;;;;;;;;;;;;37746:47;;37631:169;:::o;54334:693::-;54462:25;54499:14;54526:9;54516:7;:19;54499:36;;54567:9;54553:3;:10;:23;;54545:32;;;;;;;;54632:6;54646:11;54641:2;:16;54632:25;;54748:6;54762:9;54757:2;:14;54748:23;;54781:220;54812:7;54798:11;54793:2;:16;:26;54788:1;:32;54781:220;;;54891:1;54884:5;54880:13;54874:20;54931:3;54927:1;54922:3;54918:11;54911:24;54845:104;54967:2;54962:7;;;;54988:2;54983:7;;;;54781:220;;;55017:3;55010:10;;;;;54334:693;;;;;;;:::o;35036:377::-;35156:11;11886:1;11862:26;;11870:3;;;;;;;;;;;11862:26;;;11861:64;;;;11923:1;11894:25;11914:3;;;;;;;;;;;11894:11;;;:25;;;:::i;:::-;:30;11861:64;11857:130;;;11941:35;11518:1;11941:19;;;:35;;;:::i;:::-;;11857:130;12021:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12021:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12021:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12021:16:3;;;;;;;;;;;;;;;;12000:37;;12008:8;;;;;;;;;;;12000:37;;;;11996:106;;;12074:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12074:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12074:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12074:16:3;;;;;;;;;;;;;;;;12053:8;;:38;;;;;;;;;;;;;;;;;;11996:106;35179:22;35216:1;35204:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35179:39;;35241:5;35247:1;35241:8;;;;;;;;;;;;;35228:7;35236:1;35228:10;;;;;;;;;;;;;;;;;:21;;;;35272:5;35278:1;35272:8;;;;;;;;;;;;;35259:7;35267:1;35259:10;;;;;;;;;;;;;;;;;:21;;;;35303:5;35309:1;35303:8;;;;;;;;;;;;;35290:7;35298:1;35290:10;;;;;;;;;;;;;;;;;:21;;;;35334:5;35340:1;35334:8;;;;;;;;;;;;;35321:7;35329:1;35321:10;;;;;;;;;;;;;;;;;:21;;;;35359:47;35374:11;35387:7;35396:9;35359:14;;;:47;;;:::i;:::-;35352:54;;;35036:377;;;;;:::o;47689:152::-;47823:11;47788:22;:32;47811:8;47788:32;;;;;;;;;;;:46;;;;47689:152;;:::o;37338:147::-;37397:10;37463:5;37451:18;37442:27;;37428:51;;;:::o;12594:205::-;12659:16;12771:21;:19;;;:21;;;:::i;:::-;12764:28;;12594:205;;;:::o;29559:454::-;29678:11;11886:1;11862:26;;11870:3;;;;;;;;;;;11862:26;;;11861:64;;;;11923:1;11894:25;11914:3;;;;;;;;;;;11894:11;;;:25;;;:::i;:::-;:30;11861:64;11857:130;;;11941:35;11518:1;11941:19;;;:35;;;:::i;:::-;;11857:130;12021:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12021:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12021:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12021:16:3;;;;;;;;;;;;;;;;12000:37;;12008:8;;;;;;;;;;;12000:37;;;;11996:106;;;12074:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12074:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12074:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12074:16:3;;;;;;;;;;;;;;;;12053:8;;:38;;;;;;;;;;;;;;;;;;11996:106;29701:10;29714:8;;;;;;;;;;;:17;;;29732:11;29745:9;29714:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;29714:41:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29714:41:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29714:41:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;29714:41:3;;;;;;;;;;;;;;;;29701:54;;29801:9;29787:11;:23;29777:7;:33;29769:5;:41;29765:107;;;29833:1;29826:8;;;;;;;29765:107;29881:17;29901:14;29909:5;29901:7;;;:14;;;:::i;:::-;29881:34;;29932:8;;;;;;;;;;;:28;;;29967:5;29974:1;29977:11;29990:4;29996:9;29932:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;29932:74:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;29932:74:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29932:74:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29932:74:3;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;29932:74:3;;;;;;;;;;;;;;;;29925:81;;;;12111:1;29559:454;;;;;:::o;13073:2031::-;13122:16;13212:1;13154:55;13166:42;13154:11;;;:55;;;:::i;:::-;:59;13150:246;;;13265:42;13239:3;;:69;;;;;;;;;;;;;;;;;;13322:38;;;;;;;;;;;;;;;;;;;:23;;;:38;;;:::i;:::-;13381:4;13374:11;;;;13150:246;13467:1;13409:55;13421:42;13409:11;;;:55;;;:::i;:::-;:59;13405:255;;;13528:42;13502:3;;:69;;;;;;;;;;;;;;;;;;13585:39;;;;;;;;;;;;;;;;;;;:23;;;:39;;;:::i;:::-;13645:4;13638:11;;;;13405:255;13731:1;13673:55;13685:42;13673:11;;;:55;;;:::i;:::-;:59;13669:250;;;13790:42;13764:3;;:69;;;;;;;;;;;;;;;;;;13847:36;;;;;;;;;;;;;;;;;;;:23;;;:36;;;:::i;:::-;13904:4;13897:11;;;;13669:250;13990:1;13932:55;13944:42;13932:11;;;:55;;;:::i;:::-;:59;13928:254;;;14051:42;14025:3;;:69;;;;;;;;;;;;;;;;;;14108:38;;;;;;;;;;;;;;;;;;;:23;;;:38;;;:::i;:::-;14167:4;14160:11;;;;13928:254;14253:1;14195:55;14207:42;14195:11;;;:55;;;:::i;:::-;:59;14191:252;;;14313:42;14287:3;;:69;;;;;;;;;;;;;;;;;;14370:37;;;;;;;;;;;;;;;;;;;:23;;;:37;;;:::i;:::-;14428:4;14421:11;;;;14191:252;14514:1;14456:55;14468:42;14456:11;;;:55;;;:::i;:::-;:59;14452:202;;;14575:42;14549:3;;:69;;;;;;;;;;;;;;;;;;14639:4;14632:11;;;;14452:202;14725:1;14667:55;14679:42;14667:11;;;:55;;;:::i;:::-;:59;14663:201;;;14785:42;14759:3;;:69;;;;;;;;;;;;;;;;;;14849:4;14842:11;;;;14663:201;14935:1;14877:55;14889:42;14877:11;;;:55;;;:::i;:::-;:59;14873:203;;;14997:42;14971:3;;:69;;;;;;;;;;;;;;;;;;15061:4;15054:11;;;;14873:203;15092:5;15085:12;;13073:2031;;:::o;44670:365::-;44731:26;44769:19;:17;;;:19;;;:::i;:::-;44798:24;;:::i;:::-;44832:22;44844:3;44849:4;44832:11;;;;;:22;;;:::i;:::-;44864:16;:3;:14;;;;;:16;;;:::i;:::-;44895:6;44904:1;44895:10;;44890:88;44911:4;:11;44907:1;:15;44890:88;;;44943:24;44959:4;44964:1;44959:7;;;;;;;;;;;;;;;;;;44943:3;:15;;;;;;:24;;;;;:::i;:::-;44924:3;;;;;;;44890:88;;;;44987:17;:3;:15;;;;;:17;;;:::i;:::-;45021:3;:7;;;45014:14;;;44670:365;;;:::o;12805:125::-;12910:13;12886:21;:37;;;;;;;;;;;;:::i;:::-;;12805:125;:::o;57901:170::-;57995:4;57989:11;58049:4;58042:5;58038:16;58028:8;58022:4;58013:42;57963:102;:::o;4277:434::-;4351:13;4367:9;4351:25;;4407:1;4401:2;4390:8;:13;;;;;;;;:18;;4386:81;;;4453:2;4442:8;:13;;;;;;;;4436:2;:20;4424:32;;;;4386:81;4492:8;4476:4;:13;;:24;;;;;4588:4;4582:11;4619:3;4613:4;4606:17;4648:1;4643:3;4636:14;4685:8;4680:3;4676:18;4670:4;4663:32;4557:148;;;;:::o;10510:128::-;10581:50;10608:4;8666:1;10581:26;;;:50;;;:::i;:::-;10510:128;:::o;10125:178::-;10218:49;10229:4;8617:1;10253:6;:13;10218:10;;;:49;;;:::i;:::-;10277:19;10289:6;10277:4;:11;;;;;;:19;;;;;:::i;:::-;;10125:178;;:::o;10774:136::-;10846:57;10873:4;8828:1;10846:26;;;:57;;;:::i;:::-;10774:136;:::o;9564:145::-;9664:38;9698:2;9693:1;9683:6;:11;;;;;;9682:18;9664:4;:11;;;;;;:38;;;;;:::i;:::-;9564:145;;:::o;8836:722::-;8947:2;8937:6;:12;;8933:619;;;8965:42;8999:6;8994:1;8984:6;:11;;;;;;8983:22;;;8965:4;:11;;;;;;:42;;;;;:::i;:::-;8933:619;;;9038:4;9028:6;:14;;9024:528;;;9058:38;9092:2;9087:1;9077:6;:11;;;;;;9076:18;9058:4;:11;;;;;;:38;;;;;:::i;:::-;9110:25;9125:6;9133:1;9110:4;:14;;;;;;:25;;;;;;:::i;:::-;;9024:528;;;9166:6;9156;:16;;9152:400;;;9188:38;9222:2;9217:1;9207:6;:11;;;;;;9206:18;9188:4;:11;;;;;;:38;;;;;:::i;:::-;9240:25;9255:6;9263:1;9240:4;:14;;;;;;:25;;;;;;:::i;:::-;;9152:400;;;9296:10;9286:6;:20;;9282:270;;;9322:38;9356:2;9351:1;9341:6;:11;;;;;;9340:18;9322:4;:11;;;;;;:38;;;;;:::i;:::-;9374:25;9389:6;9397:1;9374:4;:14;;;;;;:25;;;;;;:::i;:::-;;9282:270;;;9430:18;9420:6;:28;;9416:136;;;9464:38;9498:2;9493:1;9483:6;:11;;;;;;9482:18;9464:4;:11;;;;;;:38;;;;;:::i;:::-;9516:25;9531:6;9539:1;9516:4;:14;;;;;;:25;;;;;;:::i;:::-;;9416:136;9282:270;9152:400;9024:528;8933:619;8836:722;;;:::o;5329:1213::-;5408:21;;:::i;:::-;5478:4;:13;;;5460:4;:8;;;:15;5445:5;:12;:30;:46;5441:127;;;5507:50;5514:4;5555:1;5520:32;5524:4;:13;;;5539:5;:12;5520:3;;;:32;;;:::i;:::-;:36;5507:6;;;:50;;;:::i;:::-;5441:127;5577:9;5596:8;5614;5625:5;:12;5614:23;;5690:4;5684:11;5765:6;5759:13;5852:2;5843:6;5835;5831:19;5827:28;5819:36;;5975:5;5969:12;5961:6;5957:25;5949:6;5942:41;6038:2;6031:5;6027:14;6020:21;;5656:395;;6060:206;6073:2;6066:3;:9;;6060:206;;;6190:3;6184:10;6178:4;6171:24;6230:2;6222:10;;;;6253:2;6246:9;;;;6084:2;6077:9;;;;6060:206;;;6275:9;6307:1;6300:3;6295:2;:8;6287:3;:17;:21;6275:33;;6400:4;6396:9;6390:3;6384:10;6380:26;6452:4;6445;6439:11;6435:22;6496:7;6486:8;6483:21;6477:4;6470:35;6351:164;;6531:4;6524:11;;;;;;5329:1213;;;;:::o;6826:575::-;6925:4;:13;;;6921:1;6903:4;:8;;;:15;:19;:35;6899:97;;;6954:31;6961:4;6983:1;6967:4;:13;;;:17;6954:6;;;:31;;;:::i;:::-;6899:97;7048:4;7042:11;7123:6;7117:13;7214:2;7205:6;7197;7193:19;7189:28;7312:5;7306:4;7298:20;7358:1;7350:6;7346:14;7338:6;7331:30;7014:381;;;;;:::o;7685:735::-;7770:21;;:::i;:::-;7832:4;:13;;;7814:4;:8;;;:15;7807:4;:22;:38;7803:111;;;7861:42;7868:4;7901:1;7874:24;7878:4;:13;;;7893:4;7874:3;;;:24;;;:::i;:::-;:28;7861:6;;;:42;;;:::i;:::-;7803:111;7923:9;7949:1;7942:4;7935:3;:11;:15;7923:27;;8003:4;7997:11;8078:6;8072:13;8169:4;8160:6;8152;8148:19;8144:30;8306:5;8298:4;8294:9;8287:4;8281:11;8277:27;8274:38;8268:4;8261:52;8353:4;8345:6;8341:17;8333:6;8326:33;7969:424;;;8409:4;8402:11;;;7685:735;;;;;:::o;4896:146::-;4949:9;4979:2;4974;:7;4970:47;;;5004:2;4997:9;;;;4970:47;5033:2;5026:9;;4896:146;;;;;:::o;4717:173::-;4792:19;4814:4;:8;;;4792:30;;4832:21;4837:4;4843:9;4832:4;;;:21;;;:::i;:::-;4863:20;4870:4;4876:6;4863;;;:20;;;:::i;:::-;;4717:173;;;:::o;123:2559:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "123:2559:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;593:319;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;593:319:0;;;;;;;;;;;;;;;;;;;;15342:122:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15342:122:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15342:122:3;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15342:122:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15342:122:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15342:122:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15342:122:3;;;;;;;;;;;;;;;;;;1893:329:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1893:329:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1893:329:0;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1893:329:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1893:329:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1893:329:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1893:329:0;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1893:329:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1893:329:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1893:329:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1893:329:0;;;;;;;;;;;;;;;;;;986:88;;8:9:-1;5:2;;;30:1;27;20:12;5:2;986:88:0;;;;;;;;;;;;;;;;;;;;;;;1131:102;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1131:102:0;;;;;;;;;;;;;;;;;;;;;;;46:20:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;46:20:2;;;;;;;;;;;;;;;;;;;;;;;;;;;2228:451:0;;;;;;1283:109;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1283:109:0;;;;;;;;;;;;;;;;;;;;;;;1702:185;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1702:185:0;;;;;;1434:262;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1434:262:0;;;;;;366:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;366:27:0;;;;;;;;;;;;;;;;;;;;;;;481:41;;8:9:-1;5:2;;;30:1;27;20:12;5:2;481:41:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;481:41:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;593:319;671:6;658:9;:19;650:28;;;;;;;;688:8;:6;:8::i;:::-;706:16;725:7;:19;733:10;725:19;;;;;;;;;;;;;;;706:38;;761:10;754:1;:4;;;:17;;;;;;;;;;;;;;;;;;782:11;796:8;:6;:8::i;:::-;782:22;;828:1;818:6;:11;814:61;;;858:6;845:1;:9;;;:19;;;;;;;;;;;814:61;890:14;897:6;890:14;;;;;;;;;;;;;;;;;;593:319;;;:::o;15342:122:3:-;15417:40;15428:5;15435:7;15454:1;15444:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;15444:12:3;;;;15417:10;:40::i;:::-;15342:122;;:::o;1893:329:0:-;2014:20;:18;:20::i;:::-;2000:34;;:10;:34;;;1992:43;;;;;;;;2054:20;2125:3;2112:7;2095:25;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2095:25:0;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2095:25:0;;;2085:36;;;;;;2077:45;;;:51;;;;;;;;2054:74;;2153:12;2138;:27;;;;2180:35;2202:12;2180:35;;;;;;;;;;;;;;;;;;1893:329;;;;:::o;986:88::-;1025:4;1066:1;1048:15;:19;;;;;;;;1041:26;;986:88;:::o;1131:102::-;1182:4;1213;1205:21;;;1198:28;;1131:102;:::o;46:20:2:-;;;;;;;;;;;;;:::o;2228:451:0:-;2291:29;2323:1;2291:33;;2397:24;2424:6;2397:33;;2440:140;2479:21;359:1;2554:16;2440:25;:140::i;:::-;;2595:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2228:451;;:::o;1283:109::-;1327:12;1358:7;:19;1366:10;1358:19;;;;;;;;;;;;;;;:27;;;1351:34;;1283:109;:::o;1702:185::-;125:5:2;;;;;;;;;;;111:19;;:10;:19;;;103:28;;;;;;;;1796:1:0;1780:4;1772:21;;;:25;1764:34;;;;;;;;1808:11;1830:4;1822:21;;;1808:35;;1853:10;:19;;:27;1873:6;1853:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1853:27:0;141:1:2;1702:185:0:o;1434:262::-;1522:1;1492:7;:19;1500:10;1492:19;;;;;;;;;;;;;;;:27;;;:31;1484:40;;;;;;;;1534:11;1548:7;:19;1556:10;1548:19;;;;;;;;;;;;;;;:27;;;1534:41;;1585:10;:19;;:27;1605:6;1585:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1585:27:0;1622:16;1641:7;:19;1649:10;1641:19;;;;;;;;;;;;;;;1622:38;;1683:6;1670:1;:9;;;:19;;;;;;;;;;;1434:262;;:::o;366:27::-;;;;:::o;481:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;37202:130:3:-;37262:24;11886:1;11862:26;;11870:3;;;;;;;;;;;11862:26;;;11861:64;;;;11923:1;11894:25;11914:3;;;;;;;;;;;11894:11;:25::i;:::-;:30;11861:64;11857:130;;;11941:35;11518:1;11941:19;:35::i;:::-;;11857:130;12021:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12021:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12021:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12021:16:3;;;;;;;;;;;;;;;;12000:37;;12008:8;;;;;;;;;;;12000:37;;;;11996:106;;;12074:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12074:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12074:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12074:16:3;;;;;;;;;;;;;;;;12053:8;;:38;;;;;;;;;;;;;;;;;;11996:106;37305:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37305:20:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;37305:20:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;37305:20:3;;;;;;;;;;;;;;;;37298:27;;37202:130;:::o;45041:2642::-;45143:16;45190:1;45180:7;:11;45179:32;;;;;45208:2;45197:7;:13;;45179:32;45171:41;;;;;;;;45232:2;45222:12;;;;45290:19;45322:1;45312:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;45312:12:3;;;;45290:34;;45357:7;45346:20;;45334:6;45341:1;45334:9;;;;;;;;;;;;;;:32;;;;;;;;;;;45376:19;45408:2;45398:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;45398:13:3;;;;45376:35;;45421:27;45461:2;45451:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;45451:13:3;;;;45421:43;;45474:30;45507:40;:38;:40::i;:::-;45474:73;;45595:4;45587:6;45580:20;45942:9;45932:8;45928:24;45923:1;45915:6;45911:14;45901:25;45897:56;45890:4;45882:6;45878:17;45871:83;45990:4;45974:14;45967:28;46042:22;46035:4;46019:14;46015:25;46008:57;46084:18;46115:2;46105:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46105:13:3;;;;46084:34;;46176:6;46169:4;46162:5;46158:16;46151:32;46202:25;46240:1;46230:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46230:12:3;;;;46202:40;;46252;46262:5;46269:2;46273:1;46276:12;46290:1;46252:9;:40::i;:::-;;46302:20;;:::i;:::-;:62;;;;;;;;;46326:6;46302:62;;;;46334:6;46302:62;;;;46342:14;46302:62;;;;46358:5;46302:62;;;;;46374:15;46392:47;;;;;;;;;;;;;;;;;;;46417:4;46423:15;46392:14;:47::i;:::-;46374:65;;46449:30;46492:1;46482:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46482:12:3;;;;46449:45;;46560:4;46546:12;46542:23;46536:30;46624:65;46621:1;46617:73;46610:4;46591:17;46587:28;46579:112;46749:63;46746:1;46742:71;46735:4;46716:17;46712:28;46704:110;46872:61;46869:1;46865:69;46858:4;46839:17;46835:28;46827:108;46993:59;46990:1;46986:67;46979:4;46960:17;46956:28;46948:106;47112:57;47109:1;47105:65;47098:4;47079:17;47075:28;47067:104;47229:55;47226:1;47222:63;47215:4;47196:17;47192:28;47184:102;47344:53;47341:1;47337:61;47330:4;47311:17;47307:28;47299:100;47457:51;47454:1;47450:59;47443:4;47424:17;47420:28;47412:98;46513:1007;47529:123;47561:7;47597:17;47616:4;47621:1;47616:7;;;;;;;;;;;;;47625:15;47632:4;47637:1;47632:7;;;;;;;;;;;;;47625:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47625:15:3;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;47625:15:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;47625:15:3;;;;;;;;;;;;;;;;47642:4;47647:1;47642:7;;;;;;;;;;;;;47580:70;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47580:70:3;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47580:70:3;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47580:70:3;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;47580:70:3;;;47570:81;;;;;;47529:31;:123::i;:::-;47669:7;47662:14;;;;;;;;;;;45041:2642;;;;;:::o;37338:147::-;37397:10;37463:5;37451:18;37442:27;;37428:51;;;:::o;12594:205::-;12659:16;12771:21;:19;:21::i;:::-;12764:28;;12594:205;;;:::o;37631:169::-;37711:23;11886:1;11862:26;;11870:3;;;;;;;;;;;11862:26;;;11861:64;;;;11923:1;11894:25;11914:3;;;;;;;;;;;11894:11;:25::i;:::-;:30;11861:64;11857:130;;;11941:35;11518:1;11941:19;:35::i;:::-;;11857:130;12021:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12021:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12021:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12021:16:3;;;;;;;;;;;;;;;;12000:37;;12008:8;;;;;;;;;;;12000:37;;;;11996:106;;;12074:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12074:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12074:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12074:16:3;;;;;;;;;;;;;;;;12053:8;;:38;;;;;;;;;;;;;;;;;;11996:106;37753:8;;;;;;;;;;;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37753:40:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;37753:40:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;37753:40:3;;;;;;;;;;;;;;;;37746:47;;37631:169;:::o;54334:693::-;54462:25;54499:14;54526:9;54516:7;:19;54499:36;;54567:9;54553:3;:10;:23;;54545:32;;;;;;;;54632:6;54646:11;54641:2;:16;54632:25;;54748:6;54762:9;54757:2;:14;54748:23;;54781:220;54812:7;54798:11;54793:2;:16;:26;54788:1;:32;54781:220;;;54891:1;54884:5;54880:13;54874:20;54931:3;54927:1;54922:3;54918:11;54911:24;54845:104;54967:2;54962:7;;;;54988:2;54983:7;;;;54781:220;;;55017:3;55010:10;;;;;54334:693;;;;;;;:::o;35036:377::-;35156:11;11886:1;11862:26;;11870:3;;;;;;;;;;;11862:26;;;11861:64;;;;11923:1;11894:25;11914:3;;;;;;;;;;;11894:11;:25::i;:::-;:30;11861:64;11857:130;;;11941:35;11518:1;11941:19;:35::i;:::-;;11857:130;12021:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12021:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12021:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12021:16:3;;;;;;;;;;;;;;;;12000:37;;12008:8;;;;;;;;;;;12000:37;;;;11996:106;;;12074:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12074:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12074:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12074:16:3;;;;;;;;;;;;;;;;12053:8;;:38;;;;;;;;;;;;;;;;;;11996:106;35179:22;35216:1;35204:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35179:39;;35241:5;35247:1;35241:8;;;;;;;;;;;;;35228:7;35236:1;35228:10;;;;;;;;;;;;;;;;;:21;;;;35272:5;35278:1;35272:8;;;;;;;;;;;;;35259:7;35267:1;35259:10;;;;;;;;;;;;;;;;;:21;;;;35303:5;35309:1;35303:8;;;;;;;;;;;;;35290:7;35298:1;35290:10;;;;;;;;;;;;;;;;;:21;;;;35334:5;35340:1;35334:8;;;;;;;;;;;;;35321:7;35329:1;35321:10;;;;;;;;;;;;;;;;;:21;;;;35359:47;35374:11;35387:7;35396:9;35359:14;:47::i;:::-;35352:54;;;35036:377;;;;;:::o;47689:152::-;47823:11;47788:22;:32;47811:8;47788:32;;;;;;;;;;;:46;;;;47689:152;;:::o;13073:2031::-;13122:16;13212:1;13154:55;13166:42;13154:11;:55::i;:::-;:59;13150:246;;;13265:42;13239:3;;:69;;;;;;;;;;;;;;;;;;13322:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;13381:4;13374:11;;;;13150:246;13467:1;13409:55;13421:42;13409:11;:55::i;:::-;:59;13405:255;;;13528:42;13502:3;;:69;;;;;;;;;;;;;;;;;;13585:39;;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;13645:4;13638:11;;;;13405:255;13731:1;13673:55;13685:42;13673:11;:55::i;:::-;:59;13669:250;;;13790:42;13764:3;;:69;;;;;;;;;;;;;;;;;;13847:36;;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;13904:4;13897:11;;;;13669:250;13990:1;13932:55;13944:42;13932:11;:55::i;:::-;:59;13928:254;;;14051:42;14025:3;;:69;;;;;;;;;;;;;;;;;;14108:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;14167:4;14160:11;;;;13928:254;14253:1;14195:55;14207:42;14195:11;:55::i;:::-;:59;14191:252;;;14313:42;14287:3;;:69;;;;;;;;;;;;;;;;;;14370:37;;;;;;;;;;;;;;;;;;;:23;:37::i;:::-;14428:4;14421:11;;;;14191:252;14514:1;14456:55;14468:42;14456:11;:55::i;:::-;:59;14452:202;;;14575:42;14549:3;;:69;;;;;;;;;;;;;;;;;;14639:4;14632:11;;;;14452:202;14725:1;14667:55;14679:42;14667:11;:55::i;:::-;:59;14663:201;;;14785:42;14759:3;;:69;;;;;;;;;;;;;;;;;;14849:4;14842:11;;;;14663:201;14935:1;14877:55;14889:42;14877:11;:55::i;:::-;:59;14873:203;;;14997:42;14971:3;;:69;;;;;;;;;;;;;;;;;;15061:4;15054:11;;;;14873:203;15092:5;15085:12;;13073:2031;;:::o;29559:454::-;29678:11;11886:1;11862:26;;11870:3;;;;;;;;;;;11862:26;;;11861:64;;;;11923:1;11894:25;11914:3;;;;;;;;;;;11894:11;:25::i;:::-;:30;11861:64;11857:130;;;11941:35;11518:1;11941:19;:35::i;:::-;;11857:130;12021:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12021:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12021:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12021:16:3;;;;;;;;;;;;;;;;12000:37;;12008:8;;;;;;;;;;;12000:37;;;;11996:106;;;12074:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12074:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12074:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12074:16:3;;;;;;;;;;;;;;;;12053:8;;:38;;;;;;;;;;;;;;;;;;11996:106;29701:10;29714:8;;;;;;;;;;;:17;;;29732:11;29745:9;29714:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;29714:41:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29714:41:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29714:41:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;29714:41:3;;;;;;;;;;;;;;;;29701:54;;29801:9;29787:11;:23;29777:7;:33;29769:5;:41;29765:107;;;29833:1;29826:8;;;;;;;29765:107;29881:17;29901:14;29909:5;29901:7;:14::i;:::-;29881:34;;29932:8;;;;;;;;;;;:28;;;29967:5;29974:1;29977:11;29990:4;29996:9;29932:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;29932:74:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;29932:74:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29932:74:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29932:74:3;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;29932:74:3;;;;;;;;;;;;;;;;29925:81;;;;12111:1;29559:454;;;;;:::o;12805:125::-;12910:13;12886:21;:37;;;;;;;;;;;;:::i;:::-;;12805:125;:::o;44670:365::-;44731:26;44769:19;:17;:19::i;:::-;44798:24;;:::i;:::-;44832:22;44844:3;44849:4;44832:11;:22::i;:::-;44864:16;:3;:14;:16::i;:::-;44895:6;44904:1;44895:10;;44890:88;44911:4;:11;44907:1;:15;44890:88;;;44943:24;44959:4;44964:1;44959:7;;;;;;;;;;;;;;;;;;44943:3;:15;;:24;;;;:::i;:::-;44924:3;;;;;;;44890:88;;;;44987:17;:3;:15;:17::i;:::-;45021:3;:7;;;45014:14;;;44670:365;;;:::o;57901:170::-;57995:4;57989:11;58049:4;58042:5;58038:16;58028:8;58022:4;58013:42;57963:102;:::o;4277:434::-;4351:13;4367:9;4351:25;;4407:1;4401:2;4390:8;:13;;;;;;;;:18;;4386:81;;;4453:2;4442:8;:13;;;;;;;;4436:2;:20;4424:32;;;;4386:81;4492:8;4476:4;:13;;:24;;;;;4588:4;4582:11;4619:3;4613:4;4606:17;4648:1;4643:3;4636:14;4685:8;4680:3;4676:18;4670:4;4663:32;4557:148;;;;:::o;10510:128::-;10581:50;10608:4;8666:1;10581:26;:50::i;:::-;10510:128;:::o;10125:178::-;10218:49;10229:4;8617:1;10253:6;:13;10218:10;:49::i;:::-;10277:19;10289:6;10277:4;:11;;:19;;;;:::i;:::-;;10125:178;;:::o;10774:136::-;10846:57;10873:4;8828:1;10846:26;:57::i;:::-;10774:136;:::o;9564:145::-;9664:38;9698:2;9693:1;9683:6;:11;;;;;;9682:18;9664:4;:11;;:38;;;;:::i;:::-;9564:145;;:::o;8836:722::-;8947:2;8937:6;:12;;8933:619;;;8965:42;8999:6;8994:1;8984:6;:11;;;;;;8983:22;;;8965:4;:11;;:42;;;;:::i;:::-;8933:619;;;9038:4;9028:6;:14;;9024:528;;;9058:38;9092:2;9087:1;9077:6;:11;;;;;;9076:18;9058:4;:11;;:38;;;;:::i;:::-;9110:25;9125:6;9133:1;9110:4;:14;;:25;;;;;:::i;:::-;;9024:528;;;9166:6;9156;:16;;9152:400;;;9188:38;9222:2;9217:1;9207:6;:11;;;;;;9206:18;9188:4;:11;;:38;;;;:::i;:::-;9240:25;9255:6;9263:1;9240:4;:14;;:25;;;;;:::i;:::-;;9152:400;;;9296:10;9286:6;:20;;9282:270;;;9322:38;9356:2;9351:1;9341:6;:11;;;;;;9340:18;9322:4;:11;;:38;;;;:::i;:::-;9374:25;9389:6;9397:1;9374:4;:14;;:25;;;;;:::i;:::-;;9282:270;;;9430:18;9420:6;:28;;9416:136;;;9464:38;9498:2;9493:1;9483:6;:11;;;;;;9482:18;9464:4;:11;;:38;;;;:::i;:::-;9516:25;9531:6;9539:1;9516:4;:14;;:25;;;;;:::i;:::-;;9416:136;9282:270;9152:400;9024:528;8933:619;8836:722;;;:::o;5329:1213::-;5408:21;;:::i;:::-;5478:4;:13;;;5460:4;:8;;;:15;5445:5;:12;:30;:46;5441:127;;;5507:50;5514:4;5555:1;5520:32;5524:4;:13;;;5539:5;:12;5520:3;:32::i;:::-;:36;5507:6;:50::i;:::-;5441:127;5577:9;5596:8;5614;5625:5;:12;5614:23;;5690:4;5684:11;5765:6;5759:13;5852:2;5843:6;5835;5831:19;5827:28;5819:36;;5975:5;5969:12;5961:6;5957:25;5949:6;5942:41;6038:2;6031:5;6027:14;6020:21;;5656:395;;6060:206;6073:2;6066:3;:9;;6060:206;;;6190:3;6184:10;6178:4;6171:24;6230:2;6222:10;;;;6253:2;6246:9;;;;6084:2;6077:9;;;;6060:206;;;6275:9;6307:1;6300:3;6295:2;:8;6287:3;:17;:21;6275:33;;6400:4;6396:9;6390:3;6384:10;6380:26;6452:4;6445;6439:11;6435:22;6496:7;6486:8;6483:21;6477:4;6470:35;6351:164;;6531:4;6524:11;;;;;;5329:1213;;;;:::o;6826:575::-;6925:4;:13;;;6921:1;6903:4;:8;;;:15;:19;:35;6899:97;;;6954:31;6961:4;6983:1;6967:4;:13;;;:17;6954:6;:31::i;:::-;6899:97;7048:4;7042:11;7123:6;7117:13;7214:2;7205:6;7197;7193:19;7189:28;7312:5;7306:4;7298:20;7358:1;7350:6;7346:14;7338:6;7331:30;7014:381;;;;;:::o;7685:735::-;7770:21;;:::i;:::-;7832:4;:13;;;7814:4;:8;;;:15;7807:4;:22;:38;7803:111;;;7861:42;7868:4;7901:1;7874:24;7878:4;:13;;;7893:4;7874:3;:24::i;:::-;:28;7861:6;:42::i;:::-;7803:111;7923:9;7949:1;7942:4;7935:3;:11;:15;7923:27;;8003:4;7997:11;8078:6;8072:13;8169:4;8160:6;8152;8148:19;8144:30;8306:5;8298:4;8294:9;8287:4;8281:11;8277:27;8274:38;8268:4;8261:52;8353:4;8345:6;8341:17;8333:6;8326:33;7969:424;;;8409:4;8402:11;;;7685:735;;;;;:::o;4896:146::-;4949:9;4979:2;4974;:7;4970:47;;;5004:2;4997:9;;;;4970:47;5033:2;5026:9;;4896:146;;;;;:::o;4717:173::-;4792:19;4814:4;:8;;;4792:30;;4832:21;4837:4;4843:9;4832:4;:21::i;:::-;4863:20;4870:4;4876:6;4863;:20::i;:::-;;4717:173;;;:::o;123:2559:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.8.0;\n\nimport \"./Ownable.sol\";\nimport \"./provableAPI_0.5.sol\";\n\ncontract CoinFlip is Ownable, usingProvable {\n\n    event Result (uint result);\n    event LogNewProvableQuery(string description);\n    event generatedRandomNumber(uint256 randomNumber);\n\n    uint256 constant NUM_RANDOM_BYTES_REQUESTED = 1;\n    uint256 public latestNumber;\n\n    struct Player {\n        uint balance;\n        address payable id;\n    }\n    \n    mapping(address => Player) public players;\n\n    constructor()\n        public\n    {\n        update();\n    }\n\n    function playerBet(uint amount) public payable {\n        require(msg.value == amount);\n        update();\n        Player storage c = players[msg.sender];\n        c.id = msg.sender;\n\n        uint result = random();\n        if (result == 1) {\n            c.balance += amount;\n        }\n\n        emit Result(result);\n\n    }\n\n    // pseudo-random function returns a 1 or 0 (simulates 50% odds)\n    function random() public view returns (uint) {\n        return block.timestamp % 2;\n    }\n    \n    // returns this contract's current balance\n    function getContractBalance() public view returns (uint) {\n        return address(this).balance;\n    }\n\n    // returns msg.senders (player) balance\n    function userBalance() public view returns (uint balance) {\n        return players[msg.sender].balance;\n    }\n    \n    // withdraw Player winnings\n    function withdrawPlayerBalance() public {\n        require(players[msg.sender].balance > 0);\n        uint amount = players[msg.sender].balance;\n        msg.sender.transfer(amount);\n        Player storage c = players[msg.sender];\n        c.balance -= amount;\n    }\n\n    function withdrawContractBalance() public onlyOwner {\n        require(address(this).balance > 0);\n        uint amount = address(this).balance;\n        msg.sender.transfer(amount);\n    }\n\n    function __callback(bytes32 _queryId, string memory _result, bytes memory _proof) public {\n        require(msg.sender == provable_cbAddress());\n        \n        uint256 randomNumber = uint256(keccak256(abi.encodePacked(_result))) % 100;\n        latestNumber = randomNumber;\n        emit generatedRandomNumber(randomNumber);\n    }\n\n    function update()\n        payable\n        public\n    {\n        uint256 QUERY_EXECUTION_DELAY = 0; // NOTE: The datasource currently does not support delays > 0!\n        uint256 GAS_FOR_CALLBACK = 200000;\n        provable_newRandomDSQuery(\n            QUERY_EXECUTION_DELAY,\n            NUM_RANDOM_BYTES_REQUESTED,\n            GAS_FOR_CALLBACK\n        );\n        emit LogNewProvableQuery(\"Provable query was sent, standing by for the answer...\");\n    }\n\n}\n\n\n\n",
  "sourcePath": "/home/rodrigo/Documents/IvanOnTech/coin-flip-dapp/coin-flip-dapp/contracts/CoinFlip.sol",
  "ast": {
    "absolutePath": "/home/rodrigo/Documents/IvanOnTech/coin-flip-dapp/coin-flip-dapp/contracts/CoinFlip.sol",
    "exportedSymbols": {
      "CoinFlip": [
        259
      ]
    },
    "id": 260,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "absolutePath": "/home/rodrigo/Documents/IvanOnTech/coin-flip-dapp/coin-flip-dapp/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 260,
        "sourceUnit": 318,
        "src": "66:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/rodrigo/Documents/IvanOnTech/coin-flip-dapp/coin-flip-dapp/contracts/provableAPI_0.5.sol",
        "file": "./provableAPI_0.5.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 260,
        "sourceUnit": 6614,
        "src": "90:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 317,
              "src": "144:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$317",
                "typeString": "contract Ownable"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "144:7:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6613,
              "src": "153:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6613",
                "typeString": "contract usingProvable"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "153:13:0"
          }
        ],
        "contractDependencies": [
          317,
          6613
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 259,
        "linearizedBaseContracts": [
          259,
          6613,
          317
        ],
        "name": "CoinFlip",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 11,
            "name": "Result",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "indexed": false,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 11,
                  "src": "188:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "188:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "187:13:0"
            },
            "src": "174:27:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 15,
            "name": "LogNewProvableQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "232:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "232:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "231:20:0"
            },
            "src": "206:46:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 19,
            "name": "generatedRandomNumber",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17,
                  "indexed": false,
                  "name": "randomNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "285:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "285:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "284:22:0"
            },
            "src": "257:50:0"
          },
          {
            "constant": true,
            "id": 22,
            "name": "NUM_RANDOM_BYTES_REQUESTED",
            "nodeType": "VariableDeclaration",
            "scope": 259,
            "src": "313:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "313:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 21,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "359:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24,
            "name": "latestNumber",
            "nodeType": "VariableDeclaration",
            "scope": 259,
            "src": "366:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "366:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "CoinFlip.Player",
            "id": 29,
            "members": [
              {
                "constant": false,
                "id": 26,
                "name": "balance",
                "nodeType": "VariableDeclaration",
                "scope": 29,
                "src": "424:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 25,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "424:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 29,
                "src": "446:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 27,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "446:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Player",
            "nodeType": "StructDefinition",
            "scope": 259,
            "src": "400:71:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 33,
            "name": "players",
            "nodeType": "VariableDeclaration",
            "scope": 259,
            "src": "481:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$29_storage_$",
              "typeString": "mapping(address => struct CoinFlip.Player)"
            },
            "typeName": {
              "id": 32,
              "keyType": {
                "id": 30,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "489:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "481:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$29_storage_$",
                "typeString": "mapping(address => struct CoinFlip.Player)"
              },
              "valueType": {
                "contractScope": null,
                "id": 31,
                "name": "Player",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 29,
                "src": "500:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Player_$29_storage_ptr",
                  "typeString": "struct CoinFlip.Player"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 39,
              "nodeType": "Block",
              "src": "562:25:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 36,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 258,
                      "src": "572:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "572:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "572:8:0"
                }
              ]
            },
            "documentation": null,
            "id": 40,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "540:2:0"
            },
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "562:0:0"
            },
            "scope": 259,
            "src": "529:58:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 89,
              "nodeType": "Block",
              "src": "640:272:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 46,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6628,
                            "src": "658:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "658:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 48,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "671:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "658:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 45,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6631,
                        6632
                      ],
                      "referencedDeclaration": 6631,
                      "src": "650:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "650:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "650:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 52,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 258,
                      "src": "688:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "688:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "688:8:0"
                },
                {
                  "assignments": [
                    56
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56,
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "scope": 89,
                      "src": "706:16:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$29_storage_ptr",
                        "typeString": "struct CoinFlip.Player"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 55,
                        "name": "Player",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 29,
                        "src": "706:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$29_storage_ptr",
                          "typeString": "struct CoinFlip.Player"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 61,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 57,
                      "name": "players",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "725:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$29_storage_$",
                        "typeString": "mapping(address => struct CoinFlip.Player storage ref)"
                      }
                    },
                    "id": 60,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 58,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6628,
                        "src": "733:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 59,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "733:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "725:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Player_$29_storage",
                      "typeString": "struct CoinFlip.Player storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "706:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 62,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "754:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$29_storage_ptr",
                          "typeString": "struct CoinFlip.Player storage pointer"
                        }
                      },
                      "id": 64,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "754:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 65,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6628,
                        "src": "761:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "761:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "754:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "754:17:0"
                },
                {
                  "assignments": [
                    70
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 70,
                      "name": "result",
                      "nodeType": "VariableDeclaration",
                      "scope": 89,
                      "src": "782:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 69,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "782:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 73,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 71,
                      "name": "random",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "796:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "796:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "782:22:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 74,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "818:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 75,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "828:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "818:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 84,
                  "nodeType": "IfStatement",
                  "src": "814:61:0",
                  "trueBody": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "831:44:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 77,
                              "name": "c",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56,
                              "src": "845:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Player_$29_storage_ptr",
                                "typeString": "struct CoinFlip.Player storage pointer"
                              }
                            },
                            "id": 79,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26,
                            "src": "845:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 80,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "858:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "845:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 82,
                        "nodeType": "ExpressionStatement",
                        "src": "845:19:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 86,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "897:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 85,
                      "name": "Result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "890:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "890:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88,
                  "nodeType": "EmitStatement",
                  "src": "885:19:0"
                }
              ]
            },
            "documentation": null,
            "id": 90,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "playerBet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "612:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "612:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "611:13:0"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "640:0:0"
            },
            "scope": 259,
            "src": "593:319:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 100,
              "nodeType": "Block",
              "src": "1031:43:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 95,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6618,
                        "src": "1048:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 96,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1048:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 97,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1066:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "1048:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 94,
                  "id": 99,
                  "nodeType": "Return",
                  "src": "1041:26:0"
                }
              ]
            },
            "documentation": null,
            "id": 101,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "random",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1001:2:0"
            },
            "returnParameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 93,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "1025:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1025:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1024:6:0"
            },
            "scope": 259,
            "src": "986:88:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 111,
              "nodeType": "Block",
              "src": "1188:45:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 107,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6655,
                          "src": "1213:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CoinFlip_$259",
                            "typeString": "contract CoinFlip"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CoinFlip_$259",
                            "typeString": "contract CoinFlip"
                          }
                        ],
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1205:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1205:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1205:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 105,
                  "id": 110,
                  "nodeType": "Return",
                  "src": "1198:28:0"
                }
              ]
            },
            "documentation": null,
            "id": 112,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1158:2:0"
            },
            "returnParameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "1182:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1182:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1181:6:0"
            },
            "scope": 259,
            "src": "1131:102:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 123,
              "nodeType": "Block",
              "src": "1341:51:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 117,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "1358:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$29_storage_$",
                          "typeString": "mapping(address => struct CoinFlip.Player storage ref)"
                        }
                      },
                      "id": 120,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 118,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6628,
                          "src": "1366:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1366:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1358:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$29_storage",
                        "typeString": "struct CoinFlip.Player storage ref"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 26,
                    "src": "1358:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 116,
                  "id": 122,
                  "nodeType": "Return",
                  "src": "1351:34:0"
                }
              ]
            },
            "documentation": null,
            "id": 124,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1303:2:0"
            },
            "returnParameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 115,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "1327:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1327:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1326:14:0"
            },
            "scope": 259,
            "src": "1283:109:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 166,
              "nodeType": "Block",
              "src": "1474:222:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 128,
                              "name": "players",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33,
                              "src": "1492:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$29_storage_$",
                                "typeString": "mapping(address => struct CoinFlip.Player storage ref)"
                              }
                            },
                            "id": 131,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 129,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6628,
                                "src": "1500:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 130,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1500:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1492:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Player_$29_storage",
                              "typeString": "struct CoinFlip.Player storage ref"
                            }
                          },
                          "id": 132,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26,
                          "src": "1492:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1522:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1492:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 127,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6631,
                        6632
                      ],
                      "referencedDeclaration": 6631,
                      "src": "1484:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1484:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "1484:40:0"
                },
                {
                  "assignments": [
                    138
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 138,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 166,
                      "src": "1534:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 137,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1534:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 144,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 139,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "1548:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$29_storage_$",
                          "typeString": "mapping(address => struct CoinFlip.Player storage ref)"
                        }
                      },
                      "id": 142,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 140,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6628,
                          "src": "1556:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1556:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1548:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$29_storage",
                        "typeString": "struct CoinFlip.Player storage ref"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 26,
                    "src": "1548:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1534:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 150,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138,
                        "src": "1605:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 145,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6628,
                          "src": "1585:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1585:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1585:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1585:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "1585:27:0"
                },
                {
                  "assignments": [
                    154
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 154,
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "scope": 166,
                      "src": "1622:16:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$29_storage_ptr",
                        "typeString": "struct CoinFlip.Player"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 153,
                        "name": "Player",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 29,
                        "src": "1622:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$29_storage_ptr",
                          "typeString": "struct CoinFlip.Player"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 159,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 155,
                      "name": "players",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "1641:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$29_storage_$",
                        "typeString": "mapping(address => struct CoinFlip.Player storage ref)"
                      }
                    },
                    "id": 158,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 156,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6628,
                        "src": "1649:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1649:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1641:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Player_$29_storage",
                      "typeString": "struct CoinFlip.Player storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1622:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 160,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "1670:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$29_storage_ptr",
                          "typeString": "struct CoinFlip.Player storage pointer"
                        }
                      },
                      "id": 162,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26,
                      "src": "1670:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 163,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "1683:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1670:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "1670:19:0"
                }
              ]
            },
            "documentation": null,
            "id": 167,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawPlayerBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1464:2:0"
            },
            "returnParameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1474:0:0"
            },
            "scope": 259,
            "src": "1434:262:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 196,
              "nodeType": "Block",
              "src": "1754:133:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 174,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6655,
                                "src": "1780:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CoinFlip_$259",
                                  "typeString": "contract CoinFlip"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CoinFlip_$259",
                                  "typeString": "contract CoinFlip"
                                }
                              ],
                              "id": 173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1772:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1772:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1772:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1796:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1772:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 172,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6631,
                        6632
                      ],
                      "referencedDeclaration": 6631,
                      "src": "1764:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1764:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "1764:34:0"
                },
                {
                  "assignments": [
                    182
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 182,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 196,
                      "src": "1808:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 181,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1808:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 187,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 184,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6655,
                          "src": "1830:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CoinFlip_$259",
                            "typeString": "contract CoinFlip"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CoinFlip_$259",
                            "typeString": "contract CoinFlip"
                          }
                        ],
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1822:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1822:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1822:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1808:35:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 193,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 182,
                        "src": "1873:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 188,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6628,
                          "src": "1853:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1853:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1853:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1853:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 195,
                  "nodeType": "ExpressionStatement",
                  "src": "1853:27:0"
                }
              ]
            },
            "documentation": null,
            "id": 197,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 170,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 169,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 307,
                  "src": "1744:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1744:9:0"
              }
            ],
            "name": "withdrawContractBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1734:2:0"
            },
            "returnParameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1754:0:0"
            },
            "scope": 259,
            "src": "1702:185:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 235,
              "nodeType": "Block",
              "src": "1982:240:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 207,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6628,
                            "src": "2000:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2000:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 209,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4436,
                            "src": "2014:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2014:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2000:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 206,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6631,
                        6632
                      ],
                      "referencedDeclaration": 6631,
                      "src": "1992:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1992:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 213,
                  "nodeType": "ExpressionStatement",
                  "src": "1992:43:0"
                },
                {
                  "assignments": [
                    215
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 215,
                      "name": "randomNumber",
                      "nodeType": "VariableDeclaration",
                      "scope": 235,
                      "src": "2054:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 214,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2054:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 226,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 220,
                                  "name": "_result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 201,
                                  "src": "2112:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 218,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6615,
                                  "src": "2095:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 219,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2095:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2095:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 217,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6622,
                            "src": "2085:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2085:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2077:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2077:45:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "313030",
                      "id": 224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2125:3:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "2077:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2054:74:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 227,
                      "name": "latestNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "2138:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 228,
                      "name": "randomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 215,
                      "src": "2153:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2138:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 230,
                  "nodeType": "ExpressionStatement",
                  "src": "2138:27:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 232,
                        "name": "randomNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "2202:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 231,
                      "name": "generatedRandomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "2180:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2180:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 234,
                  "nodeType": "EmitStatement",
                  "src": "2175:40:0"
                }
              ]
            },
            "documentation": null,
            "id": 236,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 199,
                  "name": "_queryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 236,
                  "src": "1913:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 198,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1913:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 201,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "scope": 236,
                  "src": "1931:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 200,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1931:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 203,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 236,
                  "src": "1954:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1954:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1912:62:0"
            },
            "returnParameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1982:0:0"
            },
            "scope": 259,
            "src": "1893:329:0",
            "stateMutability": "nonpayable",
            "superFunction": 1366,
            "visibility": "public"
          },
          {
            "body": {
              "id": 257,
              "nodeType": "Block",
              "src": "2281:398:0",
              "statements": [
                {
                  "assignments": [
                    240
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 240,
                      "name": "QUERY_EXECUTION_DELAY",
                      "nodeType": "VariableDeclaration",
                      "scope": 257,
                      "src": "2291:29:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 239,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2291:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 242,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2323:1:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2291:33:0"
                },
                {
                  "assignments": [
                    244
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 244,
                      "name": "GAS_FOR_CALLBACK",
                      "nodeType": "VariableDeclaration",
                      "scope": 257,
                      "src": "2397:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 243,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2397:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 246,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "323030303030",
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2424:6:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200000_by_1",
                      "typeString": "int_const 200000"
                    },
                    "value": "200000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2397:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 248,
                        "name": "QUERY_EXECUTION_DELAY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 240,
                        "src": "2479:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 249,
                        "name": "NUM_RANDOM_BYTES_REQUESTED",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "2514:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 250,
                        "name": "GAS_FOR_CALLBACK",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 244,
                        "src": "2554:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 247,
                      "name": "provable_newRandomDSQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5715,
                      "src": "2440:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256,uint256) returns (bytes32)"
                      }
                    },
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2440:140:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 252,
                  "nodeType": "ExpressionStatement",
                  "src": "2440:140:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e2e",
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2615:56:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6f2f0f13c6598abf8ee9fb17c87715e017f2ad977035fd635642d8acb7e90c5",
                          "typeString": "literal_string \"Provable query was sent, standing by for the answer...\""
                        },
                        "value": "Provable query was sent, standing by for the answer..."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c6f2f0f13c6598abf8ee9fb17c87715e017f2ad977035fd635642d8acb7e90c5",
                          "typeString": "literal_string \"Provable query was sent, standing by for the answer...\""
                        }
                      ],
                      "id": 253,
                      "name": "LogNewProvableQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "2595:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2595:77:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 256,
                  "nodeType": "EmitStatement",
                  "src": "2590:82:0"
                }
              ]
            },
            "documentation": null,
            "id": 258,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2243:2:0"
            },
            "returnParameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2281:0:0"
            },
            "scope": 259,
            "src": "2228:451:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 260,
        "src": "123:2559:0"
      }
    ],
    "src": "32:2654:0"
  },
  "legacyAST": {
    "absolutePath": "/home/rodrigo/Documents/IvanOnTech/coin-flip-dapp/coin-flip-dapp/contracts/CoinFlip.sol",
    "exportedSymbols": {
      "CoinFlip": [
        259
      ]
    },
    "id": 260,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "absolutePath": "/home/rodrigo/Documents/IvanOnTech/coin-flip-dapp/coin-flip-dapp/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 260,
        "sourceUnit": 318,
        "src": "66:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/rodrigo/Documents/IvanOnTech/coin-flip-dapp/coin-flip-dapp/contracts/provableAPI_0.5.sol",
        "file": "./provableAPI_0.5.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 260,
        "sourceUnit": 6614,
        "src": "90:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 317,
              "src": "144:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$317",
                "typeString": "contract Ownable"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "144:7:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6613,
              "src": "153:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6613",
                "typeString": "contract usingProvable"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "153:13:0"
          }
        ],
        "contractDependencies": [
          317,
          6613
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 259,
        "linearizedBaseContracts": [
          259,
          6613,
          317
        ],
        "name": "CoinFlip",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 11,
            "name": "Result",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "indexed": false,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 11,
                  "src": "188:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "188:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "187:13:0"
            },
            "src": "174:27:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 15,
            "name": "LogNewProvableQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "232:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "232:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "231:20:0"
            },
            "src": "206:46:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 19,
            "name": "generatedRandomNumber",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17,
                  "indexed": false,
                  "name": "randomNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "285:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "285:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "284:22:0"
            },
            "src": "257:50:0"
          },
          {
            "constant": true,
            "id": 22,
            "name": "NUM_RANDOM_BYTES_REQUESTED",
            "nodeType": "VariableDeclaration",
            "scope": 259,
            "src": "313:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "313:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 21,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "359:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24,
            "name": "latestNumber",
            "nodeType": "VariableDeclaration",
            "scope": 259,
            "src": "366:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "366:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "CoinFlip.Player",
            "id": 29,
            "members": [
              {
                "constant": false,
                "id": 26,
                "name": "balance",
                "nodeType": "VariableDeclaration",
                "scope": 29,
                "src": "424:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 25,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "424:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 29,
                "src": "446:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 27,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "446:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Player",
            "nodeType": "StructDefinition",
            "scope": 259,
            "src": "400:71:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 33,
            "name": "players",
            "nodeType": "VariableDeclaration",
            "scope": 259,
            "src": "481:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$29_storage_$",
              "typeString": "mapping(address => struct CoinFlip.Player)"
            },
            "typeName": {
              "id": 32,
              "keyType": {
                "id": 30,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "489:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "481:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$29_storage_$",
                "typeString": "mapping(address => struct CoinFlip.Player)"
              },
              "valueType": {
                "contractScope": null,
                "id": 31,
                "name": "Player",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 29,
                "src": "500:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Player_$29_storage_ptr",
                  "typeString": "struct CoinFlip.Player"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 39,
              "nodeType": "Block",
              "src": "562:25:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 36,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 258,
                      "src": "572:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "572:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "572:8:0"
                }
              ]
            },
            "documentation": null,
            "id": 40,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "540:2:0"
            },
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "562:0:0"
            },
            "scope": 259,
            "src": "529:58:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 89,
              "nodeType": "Block",
              "src": "640:272:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 46,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6628,
                            "src": "658:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "658:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 48,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "671:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "658:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 45,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6631,
                        6632
                      ],
                      "referencedDeclaration": 6631,
                      "src": "650:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "650:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "650:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 52,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 258,
                      "src": "688:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "688:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "688:8:0"
                },
                {
                  "assignments": [
                    56
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56,
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "scope": 89,
                      "src": "706:16:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$29_storage_ptr",
                        "typeString": "struct CoinFlip.Player"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 55,
                        "name": "Player",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 29,
                        "src": "706:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$29_storage_ptr",
                          "typeString": "struct CoinFlip.Player"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 61,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 57,
                      "name": "players",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "725:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$29_storage_$",
                        "typeString": "mapping(address => struct CoinFlip.Player storage ref)"
                      }
                    },
                    "id": 60,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 58,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6628,
                        "src": "733:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 59,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "733:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "725:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Player_$29_storage",
                      "typeString": "struct CoinFlip.Player storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "706:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 62,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "754:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$29_storage_ptr",
                          "typeString": "struct CoinFlip.Player storage pointer"
                        }
                      },
                      "id": 64,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "754:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 65,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6628,
                        "src": "761:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "761:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "754:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "754:17:0"
                },
                {
                  "assignments": [
                    70
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 70,
                      "name": "result",
                      "nodeType": "VariableDeclaration",
                      "scope": 89,
                      "src": "782:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 69,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "782:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 73,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 71,
                      "name": "random",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "796:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "796:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "782:22:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 74,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "818:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 75,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "828:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "818:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 84,
                  "nodeType": "IfStatement",
                  "src": "814:61:0",
                  "trueBody": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "831:44:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 77,
                              "name": "c",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56,
                              "src": "845:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Player_$29_storage_ptr",
                                "typeString": "struct CoinFlip.Player storage pointer"
                              }
                            },
                            "id": 79,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26,
                            "src": "845:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 80,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "858:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "845:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 82,
                        "nodeType": "ExpressionStatement",
                        "src": "845:19:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 86,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "897:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 85,
                      "name": "Result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "890:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "890:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88,
                  "nodeType": "EmitStatement",
                  "src": "885:19:0"
                }
              ]
            },
            "documentation": null,
            "id": 90,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "playerBet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "612:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "612:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "611:13:0"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "640:0:0"
            },
            "scope": 259,
            "src": "593:319:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 100,
              "nodeType": "Block",
              "src": "1031:43:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 95,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6618,
                        "src": "1048:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 96,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1048:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 97,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1066:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "1048:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 94,
                  "id": 99,
                  "nodeType": "Return",
                  "src": "1041:26:0"
                }
              ]
            },
            "documentation": null,
            "id": 101,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "random",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1001:2:0"
            },
            "returnParameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 93,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "1025:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1025:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1024:6:0"
            },
            "scope": 259,
            "src": "986:88:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 111,
              "nodeType": "Block",
              "src": "1188:45:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 107,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6655,
                          "src": "1213:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CoinFlip_$259",
                            "typeString": "contract CoinFlip"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CoinFlip_$259",
                            "typeString": "contract CoinFlip"
                          }
                        ],
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1205:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1205:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1205:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 105,
                  "id": 110,
                  "nodeType": "Return",
                  "src": "1198:28:0"
                }
              ]
            },
            "documentation": null,
            "id": 112,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1158:2:0"
            },
            "returnParameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "1182:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1182:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1181:6:0"
            },
            "scope": 259,
            "src": "1131:102:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 123,
              "nodeType": "Block",
              "src": "1341:51:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 117,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "1358:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$29_storage_$",
                          "typeString": "mapping(address => struct CoinFlip.Player storage ref)"
                        }
                      },
                      "id": 120,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 118,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6628,
                          "src": "1366:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1366:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1358:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$29_storage",
                        "typeString": "struct CoinFlip.Player storage ref"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 26,
                    "src": "1358:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 116,
                  "id": 122,
                  "nodeType": "Return",
                  "src": "1351:34:0"
                }
              ]
            },
            "documentation": null,
            "id": 124,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1303:2:0"
            },
            "returnParameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 115,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "1327:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1327:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1326:14:0"
            },
            "scope": 259,
            "src": "1283:109:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 166,
              "nodeType": "Block",
              "src": "1474:222:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 128,
                              "name": "players",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33,
                              "src": "1492:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$29_storage_$",
                                "typeString": "mapping(address => struct CoinFlip.Player storage ref)"
                              }
                            },
                            "id": 131,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 129,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6628,
                                "src": "1500:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 130,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1500:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1492:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Player_$29_storage",
                              "typeString": "struct CoinFlip.Player storage ref"
                            }
                          },
                          "id": 132,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26,
                          "src": "1492:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1522:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1492:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 127,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6631,
                        6632
                      ],
                      "referencedDeclaration": 6631,
                      "src": "1484:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1484:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "1484:40:0"
                },
                {
                  "assignments": [
                    138
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 138,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 166,
                      "src": "1534:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 137,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1534:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 144,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 139,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "1548:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$29_storage_$",
                          "typeString": "mapping(address => struct CoinFlip.Player storage ref)"
                        }
                      },
                      "id": 142,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 140,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6628,
                          "src": "1556:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1556:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1548:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$29_storage",
                        "typeString": "struct CoinFlip.Player storage ref"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 26,
                    "src": "1548:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1534:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 150,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138,
                        "src": "1605:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 145,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6628,
                          "src": "1585:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1585:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1585:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1585:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "1585:27:0"
                },
                {
                  "assignments": [
                    154
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 154,
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "scope": 166,
                      "src": "1622:16:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$29_storage_ptr",
                        "typeString": "struct CoinFlip.Player"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 153,
                        "name": "Player",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 29,
                        "src": "1622:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$29_storage_ptr",
                          "typeString": "struct CoinFlip.Player"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 159,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 155,
                      "name": "players",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "1641:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$29_storage_$",
                        "typeString": "mapping(address => struct CoinFlip.Player storage ref)"
                      }
                    },
                    "id": 158,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 156,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6628,
                        "src": "1649:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1649:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1641:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Player_$29_storage",
                      "typeString": "struct CoinFlip.Player storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1622:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 160,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "1670:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$29_storage_ptr",
                          "typeString": "struct CoinFlip.Player storage pointer"
                        }
                      },
                      "id": 162,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26,
                      "src": "1670:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 163,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "1683:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1670:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "1670:19:0"
                }
              ]
            },
            "documentation": null,
            "id": 167,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawPlayerBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1464:2:0"
            },
            "returnParameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1474:0:0"
            },
            "scope": 259,
            "src": "1434:262:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 196,
              "nodeType": "Block",
              "src": "1754:133:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 174,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6655,
                                "src": "1780:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CoinFlip_$259",
                                  "typeString": "contract CoinFlip"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CoinFlip_$259",
                                  "typeString": "contract CoinFlip"
                                }
                              ],
                              "id": 173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1772:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1772:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1772:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1796:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1772:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 172,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6631,
                        6632
                      ],
                      "referencedDeclaration": 6631,
                      "src": "1764:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1764:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "1764:34:0"
                },
                {
                  "assignments": [
                    182
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 182,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 196,
                      "src": "1808:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 181,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1808:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 187,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 184,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6655,
                          "src": "1830:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CoinFlip_$259",
                            "typeString": "contract CoinFlip"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CoinFlip_$259",
                            "typeString": "contract CoinFlip"
                          }
                        ],
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1822:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1822:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1822:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1808:35:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 193,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 182,
                        "src": "1873:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 188,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6628,
                          "src": "1853:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1853:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1853:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1853:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 195,
                  "nodeType": "ExpressionStatement",
                  "src": "1853:27:0"
                }
              ]
            },
            "documentation": null,
            "id": 197,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 170,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 169,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 307,
                  "src": "1744:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1744:9:0"
              }
            ],
            "name": "withdrawContractBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1734:2:0"
            },
            "returnParameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1754:0:0"
            },
            "scope": 259,
            "src": "1702:185:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 235,
              "nodeType": "Block",
              "src": "1982:240:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 207,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6628,
                            "src": "2000:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2000:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 209,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4436,
                            "src": "2014:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2014:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2000:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 206,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6631,
                        6632
                      ],
                      "referencedDeclaration": 6631,
                      "src": "1992:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1992:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 213,
                  "nodeType": "ExpressionStatement",
                  "src": "1992:43:0"
                },
                {
                  "assignments": [
                    215
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 215,
                      "name": "randomNumber",
                      "nodeType": "VariableDeclaration",
                      "scope": 235,
                      "src": "2054:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 214,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2054:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 226,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 220,
                                  "name": "_result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 201,
                                  "src": "2112:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 218,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6615,
                                  "src": "2095:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 219,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2095:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2095:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 217,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6622,
                            "src": "2085:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2085:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2077:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2077:45:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "313030",
                      "id": 224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2125:3:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "2077:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2054:74:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 227,
                      "name": "latestNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "2138:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 228,
                      "name": "randomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 215,
                      "src": "2153:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2138:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 230,
                  "nodeType": "ExpressionStatement",
                  "src": "2138:27:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 232,
                        "name": "randomNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "2202:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 231,
                      "name": "generatedRandomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "2180:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2180:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 234,
                  "nodeType": "EmitStatement",
                  "src": "2175:40:0"
                }
              ]
            },
            "documentation": null,
            "id": 236,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 199,
                  "name": "_queryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 236,
                  "src": "1913:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 198,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1913:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 201,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "scope": 236,
                  "src": "1931:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 200,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1931:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 203,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 236,
                  "src": "1954:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1954:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1912:62:0"
            },
            "returnParameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1982:0:0"
            },
            "scope": 259,
            "src": "1893:329:0",
            "stateMutability": "nonpayable",
            "superFunction": 1366,
            "visibility": "public"
          },
          {
            "body": {
              "id": 257,
              "nodeType": "Block",
              "src": "2281:398:0",
              "statements": [
                {
                  "assignments": [
                    240
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 240,
                      "name": "QUERY_EXECUTION_DELAY",
                      "nodeType": "VariableDeclaration",
                      "scope": 257,
                      "src": "2291:29:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 239,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2291:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 242,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2323:1:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2291:33:0"
                },
                {
                  "assignments": [
                    244
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 244,
                      "name": "GAS_FOR_CALLBACK",
                      "nodeType": "VariableDeclaration",
                      "scope": 257,
                      "src": "2397:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 243,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2397:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 246,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "323030303030",
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2424:6:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200000_by_1",
                      "typeString": "int_const 200000"
                    },
                    "value": "200000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2397:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 248,
                        "name": "QUERY_EXECUTION_DELAY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 240,
                        "src": "2479:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 249,
                        "name": "NUM_RANDOM_BYTES_REQUESTED",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "2514:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 250,
                        "name": "GAS_FOR_CALLBACK",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 244,
                        "src": "2554:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 247,
                      "name": "provable_newRandomDSQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5715,
                      "src": "2440:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256,uint256) returns (bytes32)"
                      }
                    },
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2440:140:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 252,
                  "nodeType": "ExpressionStatement",
                  "src": "2440:140:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f7661626c65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e2e",
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2615:56:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6f2f0f13c6598abf8ee9fb17c87715e017f2ad977035fd635642d8acb7e90c5",
                          "typeString": "literal_string \"Provable query was sent, standing by for the answer...\""
                        },
                        "value": "Provable query was sent, standing by for the answer..."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c6f2f0f13c6598abf8ee9fb17c87715e017f2ad977035fd635642d8acb7e90c5",
                          "typeString": "literal_string \"Provable query was sent, standing by for the answer...\""
                        }
                      ],
                      "id": 253,
                      "name": "LogNewProvableQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "2595:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2595:77:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 256,
                  "nodeType": "EmitStatement",
                  "src": "2590:82:0"
                }
              ]
            },
            "documentation": null,
            "id": 258,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2243:2:0"
            },
            "returnParameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2281:0:0"
            },
            "scope": 259,
            "src": "2228:451:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 260,
        "src": "123:2559:0"
      }
    ],
    "src": "32:2654:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0xa9bb0fa194e939eadb11be8d62dd4a16e0f5e89f37fb73fa7f0f8446f1abba61": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "result",
              "type": "uint256"
            }
          ],
          "name": "Result",
          "type": "event"
        },
        "0xc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c47389": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "description",
              "type": "string"
            }
          ],
          "name": "LogNewProvableQuery",
          "type": "event"
        },
        "0xc13d60fe9dffdb6908d2d446cd18134373a51db0738ee04f296eeb9128121cbc": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "randomNumber",
              "type": "uint256"
            }
          ],
          "name": "generatedRandomNumber",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x529475dB52B0529e5E7B2736cA21906DD847e470",
      "transactionHash": "0x285af34cdcba70423132598f275f6fba2da8e4c884c9061b6ed5b5be34394689"
    }
  },
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-10-31T22:23:52.029Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "__callback(bytes32,string)": {
        "details": "The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}